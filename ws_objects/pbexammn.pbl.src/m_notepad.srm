$PBExportHeader$m_notepad.srm
$PBExportComments$PowerBuilt メモ帳のメニュー
forward
global type m_notepad from menu
end type
type m_file from menu within m_notepad
end type
type m_new from menu within m_file
end type
type m_open from menu within m_file
end type
type m_close from menu within m_file
end type
type m_-4 from menu within m_file
end type
type m_save from menu within m_file
end type
type m_delete from menu within m_file
end type
type m_-2 from menu within m_file
end type
type m_print from menu within m_file
end type
type m_printsetup from menu within m_file
end type
type m_- from menu within m_file
end type
type m_exit from menu within m_file
end type
type m_file from menu within m_notepad
m_new m_new
m_open m_open
m_close m_close
m_-4 m_-4
m_save m_save
m_delete m_delete
m_-2 m_-2
m_print m_print
m_printsetup m_printsetup
m_- m_-
m_exit m_exit
end type
type m_edit from menu within m_notepad
end type
type m_undo from menu within m_edit
end type
type m_-5 from menu within m_edit
end type
type m_cut from menu within m_edit
end type
type m_copy from menu within m_edit
end type
type m_paste from menu within m_edit
end type
type m_delete1 from menu within m_edit
end type
type m_-6 from menu within m_edit
end type
type m_selectall from menu within m_edit
end type
type m_edit from menu within m_notepad
m_undo m_undo
m_-5 m_-5
m_cut m_cut
m_copy m_copy
m_paste m_paste
m_delete1 m_delete1
m_-6 m_-6
m_selectall m_selectall
end type
type m_search from menu within m_notepad
end type
type m_findtext from menu within m_search
end type
type m_findnexttext from menu within m_search
end type
type m_replacetext from menu within m_search
end type
type m_-1 from menu within m_search
end type
type m_gotoline from menu within m_search
end type
type m_search from menu within m_notepad
m_findtext m_findtext
m_findnexttext m_findnexttext
m_replacetext m_replacetext
m_-1 m_-1
m_gotoline m_gotoline
end type
type m_options from menu within m_notepad
end type
type m_statusindicator from menu within m_options
end type
type m_clock from menu within m_options
end type
type m_font from menu within m_options
end type
type m_helv from menu within m_font
end type
type m_system from menu within m_font
end type
type m_courier from menu within m_font
end type
type m_tmsroman from menu within m_font
end type
type m_font from menu within m_options
m_helv m_helv
m_system m_system
m_courier m_courier
m_tmsroman m_tmsroman
end type
type m_color from menu within m_options
end type
type m_options from menu within m_notepad
m_statusindicator m_statusindicator
m_clock m_clock
m_font m_font
m_color m_color
end type
type m_window from menucascade within m_notepad
end type
type m_tile from menu within m_window
end type
type m_horizontal from menu within m_window
end type
type m_cascade from menu within m_window
end type
type m_layer from menu within m_window
end type
type m_-7 from menu within m_window
end type
type m_arrangeicons from menu within m_window
end type
type m_-3 from menu within m_window
end type
type m_toolbar1 from menu within m_window
end type
type m_window from menucascade within m_notepad
m_tile m_tile
m_horizontal m_horizontal
m_cascade m_cascade
m_layer m_layer
m_-7 m_-7
m_arrangeicons m_arrangeicons
m_-3 m_-3
m_toolbar1 m_toolbar1
end type
type m_help from menu within m_notepad
end type
type m_contents from menu within m_help
end type
type m_-8 from menu within m_help
end type
type m_about from menu within m_help
end type
type m_help from menu within m_notepad
m_contents m_contents
m_-8 m_-8
m_about m_about
end type
global type m_notepad from menu
m_file m_file
m_edit m_edit
m_search m_search
m_options m_options
m_window m_window
m_help m_help
end type
end forward

global type m_notepad from menu
m_file m_file
m_edit m_edit
m_search m_search
m_options m_options
m_window m_window
m_help m_help
end type
global m_notepad m_notepad

on m_notepad.create
m_notepad=this
call super::create
this.m_file=create m_file
this.m_edit=create m_edit
this.m_search=create m_search
this.m_options=create m_options
this.m_window=create m_window
this.m_help=create m_help
this.Item[UpperBound(this.Item)+1]=this.m_file
this.Item[UpperBound(this.Item)+1]=this.m_edit
this.Item[UpperBound(this.Item)+1]=this.m_search
this.Item[UpperBound(this.Item)+1]=this.m_options
this.Item[UpperBound(this.Item)+1]=this.m_window
this.Item[UpperBound(this.Item)+1]=this.m_help
end on

on m_notepad.destroy
call super::destroy
destroy(this.m_file)
destroy(this.m_edit)
destroy(this.m_search)
destroy(this.m_options)
destroy(this.m_window)
destroy(this.m_help)
end on

type m_file from menu within m_notepad
m_new m_new
m_open m_open
m_close m_close
m_-4 m_-4
m_save m_save
m_delete m_delete
m_-2 m_-2
m_print m_print
m_printsetup m_printsetup
m_- m_-
m_exit m_exit
end type

on m_file.create
call super::create
this.text = "ファイル(&F)"
this.m_new=create m_new
this.m_open=create m_open
this.m_close=create m_close
this.m_-4=create m_-4
this.m_save=create m_save
this.m_delete=create m_delete
this.m_-2=create m_-2
this.m_print=create m_print
this.m_printsetup=create m_printsetup
this.m_-=create m_-
this.m_exit=create m_exit
this.Item[UpperBound(this.Item)+1]=this.m_new
this.Item[UpperBound(this.Item)+1]=this.m_open
this.Item[UpperBound(this.Item)+1]=this.m_close
this.Item[UpperBound(this.Item)+1]=this.m_-4
this.Item[UpperBound(this.Item)+1]=this.m_save
this.Item[UpperBound(this.Item)+1]=this.m_delete
this.Item[UpperBound(this.Item)+1]=this.m_-2
this.Item[UpperBound(this.Item)+1]=this.m_print
this.Item[UpperBound(this.Item)+1]=this.m_printsetup
this.Item[UpperBound(this.Item)+1]=this.m_-
this.Item[UpperBound(this.Item)+1]=this.m_exit
end on

on m_file.destroy
call super::destroy
destroy(this.m_new)
destroy(this.m_open)
destroy(this.m_close)
destroy(this.m_-4)
destroy(this.m_save)
destroy(this.m_delete)
destroy(this.m_-2)
destroy(this.m_print)
destroy(this.m_printsetup)
destroy(this.m_-)
destroy(this.m_exit)
end on

type m_new from menu within m_file
end type

on clicked;//////////////////////////////////////////////////////////////////////
// Open a new document (sheet)
//////////////////////////////////////////////////////////////////////

w_notepad w_sheet
OpenSheet (w_sheet, parentwindow, 5, cascaded!)
end on

on m_new.create
call super::create
this.text = "新規作成(&N)"
this.microhelp = "新しい文書を作成します。"
this.toolbaritemname = "ScriptNo!"
this.toolbaritemtext = "新規作成"
this.toolbaritemorder = 1
end on

on m_new.destroy
call super::destroy
end on

type m_open from menu within m_file
end type

on clicked;//////////////////////////////////////////////////////////////////////
// Open a document (sheet)
//////////////////////////////////////////////////////////////////////

window	lw_active

lw_active = parentwindow.GetActiveSheet()
if IsValid (lw_active) then
	lw_active.TriggerEvent ("ue_openfile")
end if
end on

on m_open.create
call super::create
this.text = "開く(&O)..."
this.microhelp = "既存の文書を開きます。"
this.toolbaritemname = "Custom050!"
this.toolbaritemtext = "開く"
this.toolbaritemorder = 2
end on

on m_open.destroy
call super::destroy
end on

type m_close from menu within m_file
end type

on clicked;//////////////////////////////////////////////////////////////////////
// Close a document (sheet)
//////////////////////////////////////////////////////////////////////

window	lw_active

lw_active = parentwindow.GetActiveSheet()
if IsValid (lw_active) then
	lw_active.TriggerEvent ("ue_closefile")
end if
end on

on m_close.create
call super::create
this.text = "閉じる(&C)~tCtrl+F4"
this.shortcut = 371
this.microhelp = "現在のウィンドウを閉じます。"
this.toolbaritemname = "Custom039!"
this.toolbaritemtext = "閉じる"
this.toolbaritemorder = 3
end on

on m_close.destroy
call super::destroy
end on

type m_-4 from menu within m_file
end type

on m_-4.create
call super::create
this.text = "-"
end on

on m_-4.destroy
call super::destroy
end on

type m_save from menu within m_file
end type

on clicked;window	lw_active

lw_active = parentwindow.GetActiveSheet()

if IsValid (lw_active) then
	lw_active.TriggerEvent ("ue_savefile")
end if
end on

on m_save.create
call super::create
this.text = "保存(&S)..."
this.microhelp = "現在の文書を保存します。"
this.toolbaritemname = "Custom008!"
this.toolbaritemtext = "保存"
this.toolbaritembarindex = 2
this.toolbaritemorder = 1
end on

on m_save.destroy
call super::destroy
end on

type m_delete from menu within m_file
end type

on clicked;window	lw_active


lw_active = parentwindow.GetActiveSheet()

if IsValid (lw_active) then
	lw_active.TriggerEvent ("ue_deletefile")
end if
end on

on m_delete.create
call super::create
this.text = "削除(&D)..."
this.microhelp = "ファイルを削除します。"
end on

on m_delete.destroy
call super::destroy
end on

type m_-2 from menu within m_file
end type

on m_-2.create
call super::create
this.text = "-"
end on

on m_-2.destroy
call super::destroy
end on

type m_print from menu within m_file
end type

on clicked;window	lw_active


lw_active = parentwindow.GetActiveSheet()
if IsValid (lw_active) then
	lw_active.TriggerEvent ("ue_printfile")
end if
end on

on m_print.create
call super::create
this.text = "印刷(&T)"
this.microhelp = "文書を印刷します。"
this.toolbaritemname = "Print!"
this.toolbaritemtext = "印刷"
this.toolbaritembarindex = 2
this.toolbaritemorder = 2
end on

on m_print.destroy
call super::destroy
end on

type m_printsetup from menu within m_file
end type

on clicked;if PrintSetup() = -1 then
	MessageBox ("エラー", "プリンタの設定に失敗しました。", exclamation!)
end if
end on

on m_printsetup.create
call super::create
this.text = "プリンタの設定(&I)..."
this.microhelp = "プリンタの設定をします。"
end on

on m_printsetup.destroy
call super::destroy
end on

type m_- from menu within m_file
end type

on m_-.create
call super::create
this.text = "-"
end on

on m_-.destroy
call super::destroy
end on

type m_exit from menu within m_file
end type

on clicked;Close (ParentWindow)
end on

on m_exit.create
call super::create
this.text = "終了(&X)"
this.microhelp = "現在のサンプル アプリケーションを終了します。"
this.toolbaritemname = "Exit!"
this.toolbaritemtext = "終了"
this.toolbaritembarindex = 5
this.toolbaritemorder = 2
this.toolbaritemspace = 1
end on

on m_exit.destroy
call super::destroy
end on

type m_edit from menu within m_notepad
m_undo m_undo
m_-5 m_-5
m_cut m_cut
m_copy m_copy
m_paste m_paste
m_delete1 m_delete1
m_-6 m_-6
m_selectall m_selectall
end type

on m_edit.create
call super::create
this.text = "編集(&E)"
this.m_undo=create m_undo
this.m_-5=create m_-5
this.m_cut=create m_cut
this.m_copy=create m_copy
this.m_paste=create m_paste
this.m_delete1=create m_delete1
this.m_-6=create m_-6
this.m_selectall=create m_selectall
this.Item[UpperBound(this.Item)+1]=this.m_undo
this.Item[UpperBound(this.Item)+1]=this.m_-5
this.Item[UpperBound(this.Item)+1]=this.m_cut
this.Item[UpperBound(this.Item)+1]=this.m_copy
this.Item[UpperBound(this.Item)+1]=this.m_paste
this.Item[UpperBound(this.Item)+1]=this.m_delete1
this.Item[UpperBound(this.Item)+1]=this.m_-6
this.Item[UpperBound(this.Item)+1]=this.m_selectall
end on

on m_edit.destroy
call super::destroy
destroy(this.m_undo)
destroy(this.m_-5)
destroy(this.m_cut)
destroy(this.m_copy)
destroy(this.m_paste)
destroy(this.m_delete1)
destroy(this.m_-6)
destroy(this.m_selectall)
end on

type m_undo from menu within m_edit
end type

on clicked;window	lw_active


lw_active = parentwindow.GetActiveSheet()

if IsValid (lw_active) then
	lw_active.TriggerEvent ("ue_edit_actions", 0, "undo")
end if



end on

on m_undo.create
call super::create
this.text = "取り消し(&U)~tCtrl+Z"
this.shortcut = 346
this.microhelp = "Undo"
this.toolbaritemname = "Undo!"
this.toolbaritemtext = "取り消し"
this.toolbaritembarindex = 3
this.toolbaritemorder = 1
end on

on m_undo.destroy
call super::destroy
end on

type m_-5 from menu within m_edit
end type

on m_-5.create
call super::create
this.text = "-"
end on

on m_-5.destroy
call super::destroy
end on

type m_cut from menu within m_edit
end type

on clicked;window	lw_active

lw_active = parentwindow.GetActiveSheet()

if IsValid (lw_active) then
	lw_active.TriggerEvent ("ue_edit_actions", 0, "cut")
end if

end on

on m_cut.create
call super::create
this.text = "切り取り(&T)~tCtrl+X"
this.shortcut = 344
this.microhelp = "選択範囲を切り取ってクリップボードに移動します。"
this.toolbaritemname = "Cut!"
this.toolbaritemtext = "切り取り"
this.toolbaritembarindex = 3
this.toolbaritemorder = 2
end on

on m_cut.destroy
call super::destroy
end on

type m_copy from menu within m_edit
end type

on clicked;window	lw_active

lw_active = parentwindow.GetActiveSheet()

if IsValid (lw_active) then
	lw_active.TriggerEvent ("ue_edit_actions", 0, "copy")
end if





end on

on m_copy.create
call super::create
this.text = "コピー(&C)~tCtrl+C"
this.shortcut = 323
this.microhelp = "選択範囲をクリップボードにコピーします。"
this.toolbaritemname = "Copy!"
this.toolbaritemtext = "コピー"
this.toolbaritembarindex = 3
this.toolbaritemorder = 3
end on

on m_copy.destroy
call super::destroy
end on

type m_paste from menu within m_edit
end type

on clicked;window	lw_active

lw_active = parentwindow.GetActiveSheet()

if IsValid (lw_active) then
	lw_active.TriggerEvent ("ue_edit_actions", 0, "paste")
end if


end on

on m_paste.create
call super::create
this.text = "貼り付け(&P)~tCtrl+V"
this.shortcut = 342
this.microhelp = "Paste from clipboard"
this.toolbaritemname = "Paste!"
this.toolbaritemtext = "貼り付け"
this.toolbaritembarindex = 3
this.toolbaritemorder = 4
end on

on m_paste.destroy
call super::destroy
end on

type m_delete1 from menu within m_edit
end type

on clicked;window	lw_active

lw_active = parentwindow.GetActiveSheet()

if IsValid (lw_active) then
	lw_active.TriggerEvent ("ue_edit_actions", 0, "clear")
end if



end on

on m_delete1.create
call super::create
this.text = "クリア(&L)~tDel"
this.shortcut = 46
this.microhelp = "選択範囲を消去します。"
this.toolbaritemname = "Clear!"
this.toolbaritemtext = "クリア"
this.toolbaritembarindex = 3
this.toolbaritemorder = 5
end on

on m_delete1.destroy
call super::destroy
end on

type m_-6 from menu within m_edit
end type

on m_-6.create
call super::create
this.text = "-"
end on

on m_-6.destroy
call super::destroy
end on

type m_selectall from menu within m_edit
end type

on clicked;window	lw_active

lw_active = parentwindow.GetActiveSheet()

if IsValid (lw_active) then
	lw_active.TriggerEvent ("ue_edit_actions", 0, "selectall")
end if





end on

on m_selectall.create
call super::create
this.text = "すべて選択(&A)~tCtrl+A"
this.shortcut = 321
this.microhelp = "文書全体を選択します。"
this.toolbaritemname = "SelectAll!"
this.toolbaritemtext = "全体を選択"
this.toolbaritembarindex = 3
this.toolbaritemorder = 6
end on

on m_selectall.destroy
call super::destroy
end on

type m_search from menu within m_notepad
m_findtext m_findtext
m_findnexttext m_findnexttext
m_replacetext m_replacetext
m_-1 m_-1
m_gotoline m_gotoline
end type

on m_search.create
call super::create
this.text = "検索(&S)"
this.m_findtext=create m_findtext
this.m_findnexttext=create m_findnexttext
this.m_replacetext=create m_replacetext
this.m_-1=create m_-1
this.m_gotoline=create m_gotoline
this.Item[UpperBound(this.Item)+1]=this.m_findtext
this.Item[UpperBound(this.Item)+1]=this.m_findnexttext
this.Item[UpperBound(this.Item)+1]=this.m_replacetext
this.Item[UpperBound(this.Item)+1]=this.m_-1
this.Item[UpperBound(this.Item)+1]=this.m_gotoline
end on

on m_search.destroy
call super::destroy
destroy(this.m_findtext)
destroy(this.m_findnexttext)
destroy(this.m_replacetext)
destroy(this.m_-1)
destroy(this.m_gotoline)
end on

type m_findtext from menu within m_search
end type

on clicked;window	lw_active

lw_active = parentwindow.GetActiveSheet()

if IsValid (lw_active) then
	lw_active.TriggerEvent ("ue_find_text")
end if
end on

on m_findtext.create
call super::create
this.text = "検索(&F)...~tCtrl+F"
this.shortcut = 326
this.microhelp = "指定された文字列を検索します。"
end on

on m_findtext.destroy
call super::destroy
end on

type m_findnexttext from menu within m_search
end type

on clicked;window	lw_active

lw_active = parentwindow.GetActiveSheet()

if IsValid (lw_active) then
	lw_active.TriggerEvent ("ue_find_next_text")
end if



end on

on m_findnexttext.create
call super::create
this.text = "次を検索(&N)~tCtrl+N"
this.shortcut = 334
this.microhelp = "直前に行った検索を繰り返します。"
end on

on m_findnexttext.destroy
call super::destroy
end on

type m_replacetext from menu within m_search
end type

on clicked;window	lw_active

lw_active = parentwindow.GetActiveSheet()

if IsValid (lw_active) then
	lw_active.TriggerEvent ("ue_replace_text")
end if



end on

on m_replacetext.create
call super::create
this.text = "置換(&R)...~tCtrl+R"
this.shortcut = 338
this.microhelp = "指定された文字列をほかの文字列に置換します。"
end on

on m_replacetext.destroy
call super::destroy
end on

type m_-1 from menu within m_search
end type

on m_-1.create
call super::create
this.text = "-"
end on

on m_-1.destroy
call super::destroy
end on

type m_gotoline from menu within m_search
end type

on clicked;window	lw_active

lw_active = parentwindow.GetActiveSheet()

if IsValid (lw_active) then
	lw_active.TriggerEvent ("ue_go_to_line")
end if




end on

on m_gotoline.create
call super::create
this.text = "指定行へ移動(&G)~tCtrl+G"
this.shortcut = 327
this.microhelp = "文書の指定された行へ移動します。"
end on

on m_gotoline.destroy
call super::destroy
end on

type m_options from menu within m_notepad
m_statusindicator m_statusindicator
m_clock m_clock
m_font m_font
m_color m_color
end type

on m_options.create
call super::create
this.text = "オプション(&O)"
this.m_statusindicator=create m_statusindicator
this.m_clock=create m_clock
this.m_font=create m_font
this.m_color=create m_color
this.Item[UpperBound(this.Item)+1]=this.m_statusindicator
this.Item[UpperBound(this.Item)+1]=this.m_clock
this.Item[UpperBound(this.Item)+1]=this.m_font
this.Item[UpperBound(this.Item)+1]=this.m_color
end on

on m_options.destroy
call super::destroy
destroy(this.m_statusindicator)
destroy(this.m_clock)
destroy(this.m_font)
destroy(this.m_color)
end on

type m_statusindicator from menu within m_options
end type

on clicked;window	lw_active

lw_active = parentwindow.GetActiveSheet()

if IsValid (lw_active) then
	lw_active.TriggerEvent ("ue_status_indicator")

	if this.checked = false then
		Check (this)
	else
		UnCheck (this)
	end if
end if


end on

on m_statusindicator.create
call super::create
this.text = "位置情報の表示(&S)"
this.microhelp = "位置情報の表示/非表示を切り替えます。"
end on

on m_statusindicator.destroy
call super::destroy
end on

type m_clock from menu within m_options
end type

on clicked;window	lw_active

lw_active = parentwindow.GetActiveSheet()

if IsValid (lw_active) then
	lw_active.TriggerEvent ("ue_clock")

	if this.checked = false then
		Check (this)
	else
		UnCheck (this)
	end if
end if

end on

on m_clock.create
call super::create
this.text = "時計(&C)"
this.microhelp = "時計の表示/非表示を切り替えます。"
end on

on m_clock.destroy
call super::destroy
end on

type m_font from menu within m_options
m_helv m_helv
m_system m_system
m_courier m_courier
m_tmsroman m_tmsroman
end type

on m_font.create
call super::create
this.text = "フォント(&F)"
this.microhelp = "テキストのフォントを変更します。"
this.m_helv=create m_helv
this.m_system=create m_system
this.m_courier=create m_courier
this.m_tmsroman=create m_tmsroman
this.Item[UpperBound(this.Item)+1]=this.m_helv
this.Item[UpperBound(this.Item)+1]=this.m_system
this.Item[UpperBound(this.Item)+1]=this.m_courier
this.Item[UpperBound(this.Item)+1]=this.m_tmsroman
end on

on m_font.destroy
call super::destroy
destroy(this.m_helv)
destroy(this.m_system)
destroy(this.m_courier)
destroy(this.m_tmsroman)
end on

type m_helv from menu within m_font
end type

event clicked;window	lw_active

lw_active = parentwindow.GetActiveSheet()

if IsValid (lw_active) then
	lw_active.TriggerEvent ("ue_change_fonts", 0, Left(This.Text, (Len(This.Text) - 4)))
end if

end event

on m_helv.create
call super::create
this.text = "ＭＳ ゴシック(&G)"
this.microhelp = "テキストのフォントを ~'ＭＳ ゴシック~' に変更します。"
end on

on m_helv.destroy
call super::destroy
end on

type m_system from menu within m_font
end type

event clicked;window	lw_active

lw_active = parentwindow.GetActiveSheet()

if IsValid (lw_active) then
	lw_active.TriggerEvent ("ue_change_fonts", 0, Left(This.Text, (Len(This.Text) - 4)))
end if


end event

on m_system.create
call super::create
this.text = "System(&S)"
this.microhelp = "テキストのフォントを ~'System~' に変更します。"
end on

on m_system.destroy
call super::destroy
end on

type m_courier from menu within m_font
end type

event clicked;window	lw_active

lw_active = parentwindow.GetActiveSheet()

if IsValid (lw_active) then
	lw_active.TriggerEvent ("ue_change_fonts", 0, Left(This.Text, (Len(This.Text) - 4)))
end if
end event

on m_courier.create
call super::create
this.text = "Courier(&C)"
this.microhelp = "テキストのフォントを ~'Courier~' に変更します。"
end on

on m_courier.destroy
call super::destroy
end on

type m_tmsroman from menu within m_font
end type

event clicked;window	lw_active

lw_active = parentwindow.GetActiveSheet()

if IsValid (lw_active) then
	lw_active.TriggerEvent ("ue_change_fonts", 0, Left(This.Text, (Len(This.Text) - 4)))
end if
end event

on m_tmsroman.create
call super::create
this.text = "ＭＳ 明朝(&M)"
this.microhelp = "テキストのフォントを ~'ＭＳ 明朝~' に変更します。"
end on

on m_tmsroman.destroy
call super::destroy
end on

type m_color from menu within m_options
end type

on clicked;window	lw_active

lw_active = parentwindow.GetActiveSheet()

if IsValid (lw_active) then
	lw_active.TriggerEvent ("ue_set_text_color" )
end if
end on

on m_color.create
call super::create
this.text = "色(&R)..."
this.microhelp = "テキストの色を変更します。"
end on

on m_color.destroy
call super::destroy
end on

type m_window from menucascade within m_notepad
m_tile m_tile
m_horizontal m_horizontal
m_cascade m_cascade
m_layer m_layer
m_-7 m_-7
m_arrangeicons m_arrangeicons
m_-3 m_-3
m_toolbar1 m_toolbar1
end type

on m_window.create
call super::create
this.text = "ウィンドウ(&W)"
this.toolbaritembarindex = 4
this.toolbaritemorder = 1
this.columns = 2
this.m_tile=create m_tile
this.m_horizontal=create m_horizontal
this.m_cascade=create m_cascade
this.m_layer=create m_layer
this.m_-7=create m_-7
this.m_arrangeicons=create m_arrangeicons
this.m_-3=create m_-3
this.m_toolbar1=create m_toolbar1
this.Item[UpperBound(this.Item)+1]=this.m_tile
this.Item[UpperBound(this.Item)+1]=this.m_horizontal
this.Item[UpperBound(this.Item)+1]=this.m_cascade
this.Item[UpperBound(this.Item)+1]=this.m_layer
this.Item[UpperBound(this.Item)+1]=this.m_-7
this.Item[UpperBound(this.Item)+1]=this.m_arrangeicons
this.Item[UpperBound(this.Item)+1]=this.m_-3
this.Item[UpperBound(this.Item)+1]=this.m_toolbar1
end on

on m_window.destroy
call super::destroy
destroy(this.m_tile)
destroy(this.m_horizontal)
destroy(this.m_cascade)
destroy(this.m_layer)
destroy(this.m_-7)
destroy(this.m_arrangeicons)
destroy(this.m_-3)
destroy(this.m_toolbar1)
end on

type m_tile from menu within m_window
end type

on clicked;parentwindow.arrangesheets (tile!)
end on

on m_tile.create
call super::create
this.text = "左右に並べて表示(&T)"
this.microhelp = "すべてのシートを左右に整列して表示します。"
this.toolbaritemname = "Tile!"
this.toolbaritemtext = "縦に整列"
this.toolbaritembarindex = 4
this.toolbaritemorder = 1
end on

on m_tile.destroy
call super::destroy
end on

type m_horizontal from menu within m_window
end type

on clicked;parentwindow.arrangesheets (TileHorizontal!)
end on

on m_horizontal.create
call super::create
this.text = "上下に並べて表示(&H)"
this.microhelp = "すべてのシートを上下に整列して表示します。"
this.toolbaritemname = "Horizontal!"
this.toolbaritemtext = "横に整列"
this.toolbaritembarindex = 4
this.toolbaritemorder = 2
end on

on m_horizontal.destroy
call super::destroy
end on

type m_cascade from menu within m_window
end type

on clicked;parentwindow.arrangesheets (cascade!)
end on

on m_cascade.create
call super::create
this.text = "重ねて表示(&C)"
this.microhelp = "すべてのシートを重ねて表示します。"
this.toolbaritemname = "Cascade!"
this.toolbaritemtext = "重ねて表示"
this.toolbaritembarindex = 4
this.toolbaritemorder = 3
end on

on m_cascade.destroy
call super::destroy
end on

type m_layer from menu within m_window
end type

on clicked;parentwindow.arrangesheets (layer!)
end on

on m_layer.create
call super::create
this.text = "上重ね表示(&L)"
this.microhelp = "すべてのシートを上重ねて表示します。"
this.toolbaritemname = "Layer!"
this.toolbaritemtext = "上重ね"
this.toolbaritembarindex = 4
this.toolbaritemorder = 4
end on

on m_layer.destroy
call super::destroy
end on

type m_-7 from menu within m_window
end type

on m_-7.create
call super::create
this.text = "-"
end on

on m_-7.destroy
call super::destroy
end on

type m_arrangeicons from menu within m_window
end type

on clicked;parentwindow.arrangesheets (icons!)
end on

on m_arrangeicons.create
call super::create
this.text = "アイコンの整列(&I)"
this.microhelp = "すべてのアイコンを整列します。"
this.toolbaritemname = "ArrangeIcons!"
this.toolbaritemtext = "アイコンの整列"
this.toolbaritembarindex = 4
this.toolbaritemorder = 5
end on

on m_arrangeicons.destroy
call super::destroy
end on

type m_-3 from menu within m_window
end type

on m_-3.create
call super::create
this.text = "-"
end on

on m_-3.destroy
call super::destroy
end on

type m_toolbar1 from menu within m_window
end type

event clicked;OpenWithParm (w_set_toolbars, parentwindow)

end event

on m_toolbar1.create
call super::create
this.text = "ツ-ルバ-(&B)..."
this.microhelp = "ツールバーの設定"
end on

on m_toolbar1.destroy
call super::destroy
end on

type m_help from menu within m_notepad
m_contents m_contents
m_-8 m_-8
m_about m_about
end type

on m_help.create
call super::create
this.text = "ヘルプ(&H)"
this.m_contents=create m_contents
this.m_-8=create m_-8
this.m_about=create m_about
this.Item[UpperBound(this.Item)+1]=this.m_contents
this.Item[UpperBound(this.Item)+1]=this.m_-8
this.Item[UpperBound(this.Item)+1]=this.m_about
end on

on m_help.destroy
call super::destroy
destroy(this.m_contents)
destroy(this.m_-8)
destroy(this.m_about)
end on

type m_contents from menu within m_help
end type

on clicked;f_open_help ('w_notepad_frame')
end on

on m_contents.create
call super::create
this.text = "PowerBuilder メモ帳のヘルプ(&C)...~tF1"
this.shortcut = 112
this.microhelp = "PowerBuilder メモ帳のヘルプを表示します。"
this.toolbaritemname = "Help!"
this.toolbaritemtext = "ヘルプ"
this.toolbaritembarindex = 5
this.toolbaritemorder = 1
end on

on m_contents.destroy
call super::destroy
end on

type m_-8 from menu within m_help
end type

on m_-8.create
call super::create
this.text = "-"
end on

on m_-8.destroy
call super::destroy
end on

type m_about from menu within m_help
end type

on clicked;OpenWithParm (w_about_with_parm, 'PowerBuilt メモ帳@')
end on

on m_about.create
call super::create
this.text = "バージョン情報(&A)..."
this.microhelp = "PowerBuilt メモ帳のバージョン情報を表示します。"
end on

on m_about.destroy
call super::destroy
end on

