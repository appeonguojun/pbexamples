$PBExportHeader$d_examples.srd
$PBExportComments$サンプル プログラムの一覧で使用します
release 12;
datawindow(units=0 timer_interval=0 color=16777215 brushmode=0 transparency=0 gradient.angle=0 gradient.color=8421504 gradient.focus=0 gradient.repetition.count=0 gradient.repetition.length=100 gradient.repetition.mode=0 gradient.scale=100 gradient.spread=100 gradient.transparency=0 picture.blur=0 picture.clip.bottom=0 picture.clip.left=0 picture.clip.right=0 picture.clip.top=0 picture.mode=0 picture.scale.x=100 picture.scale.y=100 picture.transparency=0 processing=1 HTMLDW=no print.printername="" print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 97 print.margin.bottom = 97 print.paper.source = 0 print.paper.size = 0 print.canusedefaultprinter=yes print.prompt=no print.buttons=no print.preview.buttons=no print.cliptext=no print.overrideprintjob=no print.collate=yes print.background=no print.preview.background=no print.preview.outline=yes hidegrayline=no showbackcoloronxp=no picture.file="" grid.lines=0 )
header(height=64 color="536870912" transparency="0" gradient.color="8421504" gradient.transparency="0" gradient.angle="0" brushmode="0" gradient.repetition.mode="0" gradient.repetition.count="0" gradient.repetition.length="100" gradient.focus="0" gradient.scale="100" gradient.spread="100" )
summary(height=0 color="536870912" transparency="0" gradient.color="8421504" gradient.transparency="0" gradient.angle="0" brushmode="0" gradient.repetition.mode="0" gradient.repetition.count="0" gradient.repetition.length="100" gradient.focus="0" gradient.scale="100" gradient.spread="100" )
footer(height=0 color="536870912" transparency="0" gradient.color="8421504" gradient.transparency="0" gradient.angle="0" brushmode="0" gradient.repetition.mode="0" gradient.repetition.count="0" gradient.repetition.length="100" gradient.focus="0" gradient.scale="100" gradient.spread="100" )
detail(height=85 color="536870912" transparency="0" gradient.color="8421504" gradient.transparency="0" gradient.angle="0" brushmode="0" gradient.repetition.mode="0" gradient.repetition.count="0" gradient.repetition.length="100" gradient.focus="0" gradient.scale="100" gradient.spread="100" )
table(column=(type=char(40) updatewhereclause=yes name=group_id dbname="examples_groups.group_id" )
 column=(type=char(32765) updatewhereclause=yes name=description dbname="examples.description" )
 column=(type=char(60) updatewhereclause=yes name=title dbname="examples.title" )
 column=(type=char(40) updatewhereclause=yes name=window dbname="examples.window" )
 column=(type=char(5) updatewhereclause=yes name=version dbname="examples.version" )
 column=(type=char(32765) updatewhereclause=yes name=technique dbname="examples.technique" )
 column=(type=long updatewhereclause=yes name=new dbname="examples.new" )
 column=(type=long updatewhereclause=yes name=enhanced dbname="examples.enhanced" )
 column=(type=char(40) updatewhereclause=yes name=ostype dbname="examples.ostype" )
 column=(type=char(17) updatewhereclause=yes name=pbtype dbname="examples.pbtype" )
 column=(type=long updatewhereclause=yes name=exhelp dbname="examples.exhelp" )
 retrieve="PBSELECT( VERSION(400) TABLE(NAME=~"examples~" )  TABLE(NAME=~"examples_groups~" ) COLUMN(NAME=~"examples_groups.group_id~") COLUMN(NAME=~"examples.description~") COLUMN(NAME=~"examples.title~") COLUMN(NAME=~"examples.window~") COLUMN(NAME=~"examples.version~") COLUMN(NAME=~"examples.technique~") COLUMN(NAME=~"examples.new~") COLUMN(NAME=~"examples.enhanced~") COLUMN(NAME=~"examples.ostype~") COLUMN(NAME=~"examples.pbtype~") COLUMN(NAME=~"examples.exhelp~")    JOIN (LEFT=~"examples.window~"    OP =~"=~"RIGHT=~"examples_groups.window~" )) ORDER(NAME=~"examples_groups.group_id~" ASC=yes )  ORDER(NAME=~"examples.title~" ASC=yes ) "  sort="window A " )
data("データ パイプライン","このサンプル プログラムでは、データ パイプライン機能を使って以下の処理を行います。
1) テーブル構造とデータのコピー
2) テーブル構造のみのコピー (データのコピーは行わない)
3) トランザクション マスターの更新","データ パイプライン","w_pipeline","4.0","データ パイプライン オブジェクトを使用します。　このオブジェクトは、Pipeline システム オブジェクトを継承したユーザ オブジェクトとして作成されています。　ユーザ オブジェクトを作成しておくと、アプリケーションの実行中に動的にデータ パイプラインを作成した場合においても、パイプラインを実行することができます。　ユーザ オブジェクトを作成し、そのDataObject プロパティにデータ パイプラインを割り当てます。

以下のPipeline オブジェクトに対して使用できる Powerscript 関数を使用しています。
Start (source, destination, DataWindow, parm) - データ パイプラインの処理を開始します。
Cancel ( ) - パイプライン処理を中断します。
Repair  ( ) - 処理中に発生したエラーの復旧処理を行います。", 0, 0,"","", 1,"データ パイプライン","PowerBuilder 5.0 の新機能の 1 つで、データ パイプラインで Blob (Binary Large Object) カラムを使用できるようになりました。　このサンプル プログラムは、Blob カラムを持つ OLE テーブルのコピーを作成します。","Blob カラムを含んだデータ パイプライン","w_pipeline_blob","5.0","データ パイプラインで、Blob カラムを指定する方法を示します。　また、OLE 2.0 オブジェクトをデータウィンドウで表示する方法も示します。", 0, 0,"macintoshsol2hpuxaix","", 1,"データ パイプライン","PowerBuilder 5.0 の新機能の 1 つで、ストアド プロシージャを、データ パイプラインの転送元データとして指定できるようになりました。　このサンプル プログラムは、データ パイプラインを使用して、販売受注に関するすべての情報を含むテーブルを作成し、ロードします。","ストアド プロシージャをソースとするデータ パイプライン","w_pipeline_sp","5.0","ストアド プロシージャからデータ パイプラインを作成する方法を示します。", 0, 0,"","desktop", 1,"データストア","Windows 95 のエクスプローラのようなインタフェースで、データ操作を行います。　２つのコントロール (ツリービューとリストビュー) をリンクして使用します。","データ エクスプローラ","w_data_explorer","5.0","DataStores のデータを、ツリービューおよびリストビュー コントロールに表示します。　また、ツリービューとリストビュー コントロールの標準的なイベントを使用して、この２つのコントロールをリンクする方法を示します。", 0, 0,"","", 1,"データストア","データ操作を行うインタフェースとして、Windows のプログラム マネージャのようなインタフェースを提供します。　このプログラムは MDI アプリケーションで、各シート上にはリストビュー コントロールが貼り付けられています。　階層をたどって必要なデータを入手することができます。","データ マネージャ","w_data_manager_frame","5.0","DataStores のデータをリストビュー コントロールに表示します。　また、リストビューと MDI の基本機能の実装方法を示します。", 0, 0,"","", 1,"データストア","リストビュー コントロールの実用的な使用方法を示します。　リストビューに表示されている製品をドラッグ アンド ドロップして商品の注文情報を作成することができます。","受注データのリストビュー","w_add_sales_order","5.0","データストア オブジェクトのデータをリストビュー コントロールに表示します。　また、ドラッグ アンド ドロップ機能と、リストビューにおけるマウスの右ボタン サポートの実装方法を示しています。", 0, 0,"","", 1,"データストア","PowerBuilder 5.0 の データストアを使用して、データウィンドウに表示するデータをキャッシュする方法を示します。","データストアと ShareData 関数","w_datastore_share","5.0","４つの異なるデータストアが作成され、データはウィンドウが開くときに検索されます。　ラジオボタンがクリックされるたびに、データストアとデータウィンドウ間でデータを共有するために、ShareData 関数が呼び出されます。", 0, 0,"","", 1,"データストア","ツリービュー コントロールでデータ ナビゲーションを行い、データウィンドウでデータを更新します。","ツリービューとデータウィンドウのリンク","w_tv_dw_link","5.0","データストアのデータを、ツリービュー コントロールに表示し、ツリービューのレベルをデータウィンドウにリンクします。", 0, 0,"","", 1,"データストア","ツリービュー上の従業員をドラッグ アンド ドロップで、別の部署に移動することができます。","ツリービュー上のドラッグ アンド ドロップ","w_employee_xfer","5.0","ツリービューの項目をドラッグして、ツリービュー コントロールを更新する方法を示します。", 0, 0,"","", 1,"データウィンドウ - 動的作成","テーブルとカラムを選択することによって、SQL の SELECT 文を作成します。　データウィンドウは、SQL のSELECT 文またはデータウィンドウのソース コードによって作成されます。　データウィンドウは、表示や編集が可能です。","SQL 文と DW構文からのデータウィンドウ作成","w_dw_from_select","2.0","PowerBuilder のシステム テーブルを使用し、テーブルとカラムの参照を可能にします。

SyntaxFromSQL 関数は、SQL の SELECT 文に基づいてデータウィンドウのソース コードを作成するために使用されます。

Create 関数は、データウィンドウのソース コードに基づいて、実際のデータウィンドウを作成するために使用されます。", 0, 0,"","", 1,"データウィンドウ - 動的作成","OpenUserObjectWithParm 関数を使用して、データウィンドウ コントロールとやり取りするユーザ オブジェクト のコマンドボタンを作成します。　[ユーザ オブジェクト] メニューから必要なボタンを選択しウィンドウ上をクリックすると、コマンド ボタンを作成することができます。　作成したボタンをクリックすると、ボタンが持つ機能が実行されます。","動的ユーザ オブジェクト","w_dynamic_uo_open_uo_frame","3.0","MDI、OpenUserObjectWithParm 関数、継承関係 (メニュー)、カーソルの変更を使用しています。", 0, 0,"","", 1,"データウィンドウ - 動的作成","データウィンドウ ペインタの Quick Select オプションに基づくウィンドウを使用する MDI アプリケーションです。　作成したデータウィンドウは、[ファイル] - [データウィンドウの保存] を使用するとPowerBuilder ライブラリに保存できます。","実行時のデータウィンドウ ペインタ","w_mdi_quick_select","3.0","SyntaxFromSQL 関数を使用して SQL 文からデータウィンドウを動的に作成します。データウィンドウが作成されると、Describe 関数でカラムの属性値を参照できます。Modify 関数を使用すれば属性値を変更できます。ダイアログの保存では DirList 関数を使用して PBL の一覧を表示します。データウィンドウを保存するには LibraryImport 関数を使用します。", 0, 0,"","", 1,"データウィンドウ - イベントと関数","データウィンドウ オブジェクトの、プロパティに対する条件式の使い方を示します。データウィンドウは、｢地域｣ を検索条件に指定して、注文書のリストを表示します。修正できるのは、指定された地域名の行だけです。修正可能なカラムの背景は白で、修正できないカラムの背景はグレーで表示されます。カラムを修正すると、各行の左側にディスクのピクチャが表示されます。","データウィンドウのプロパティの使い方","w_protected_columns","4.0","このサンプル プログラムでは、Protect プロパティ、BackgroundColor プロパティ、Visible プロパティを使用します。カラムプロパティに対する式で検索引数を参照し、検索引数で指定された地域名の行のみを修正可能にします。IsRowNew 関数はプロパティに対する式で呼び出され、修正可能な新規行のカラムを指定します。IsRowModified 関数はピクチャ オブジェクトの Visible プロパティから呼び出され、行が修正されるとこのピクチャ オブジェクトを表示します。", 0, 0,"","", 1,"データウィンドウ - イベントと関数","部署ごとにすべての従業員リストを表示し、給与が最低および最高の従業員名をカラー表示します。","プロパティ設定で計算フィールドを使用","w_compute_in_attribute","4.0","Salary カラムの Color プロパティに対する条件式で、データウィンドウのグループ トレーラ区域の計算フィールド Minimum Salary および Maximum Salary を参照しています。　詳細区域の Salary カラムの値がグループ トレーラ区域の計算フィールドの値に等しい場合、カラムのテキスト色が変更されます。　このウィンドウで必要なスクリプトの記述は、データウィンドウを検索し更新する処理だけです。", 0, 0,"","", 1,"データウィンドウ - イベントと関数","給与が平均以上の従業員を、インジケータで示します。","インジケータの表示","w_high_low_salaries","2.0","データウィンドウの計算カラムで、Bitmap 関数および If 関数を使用しています。", 0, 0,"","", 0,"データウィンドウ - イベントと関数","データウィンドウから別のデータウィンドウへ、構造体の配列を使用してデータをコピーします。","データウィンドウのコピー","w_dw_copy","5.0","データウィンドウのデータ構造と一致する構造体の配列を宣言する方法を示します。　ドット (.) 表記を使用したオブジェクトの参照を使用して配列にデータをコピーし、次にこのデータを別のデータウィンドウにコピーします。　この方法で行うと、より速くデータのコピーを行うことができます。GetItem/SetItem, copying data to the Clipboard and using ImportString, copying data into a structure array and back, direct assignment, and using RowsCopy.", 0, 0,"","", 1,"データウィンドウ - イベントと関数","ドラッグ アンド ドロップを使用して、データウィンドウの行をバッファ (主バッファ、削除バッファ、フィルタ バッファ) からコピー、移動、または削除します。","行のコピー、移動、削除","w_dw_rows","4.0","データウィンドウから行のコピー、移動、削除を行う関数 - RowsCopy、RowsMove、および RowsDiscard - の使い方を示します。　このプログラムでは、同じデータウィンドウ コントロール内だけでなく、異なるデータウィンドウ バッファやデータウィンドウ コントロール間で、行のコピーや移動を行うことができます。", 0, 0,"","", 1,"データウィンドウ - イベントと関数","現行の行の枠と背景色を変更し、現在どの行が選択されているかを示します。","CurrentRow 関数","w_currentrow","5.0","カラムの枠と背景色のプロパティ式に、データウィンドウ関数 CurrentRow 関数を使用し、行が現行の行になったときを判定します。", 0, 0,"","", 1,"データウィンドウ - イベントと関数","４種類のデータウィンドウ バッファの内容と、行とカラムのステータス、およびデータウィンドウによって生成される SQL 文を表示します。","データウィンドウ バッファ","w_dwbuffers_frame","4.0","データウィンドウ バッファの値と、行とカラムのステータスの取得方法を示します。　また、SQLPreview イベントの使用方法も示します。", 0, 0,"","", 1,"データウィンドウ - イベントと関数","PowerBuilder 5.0 で新しく追加されたデータウィンドウ式で使用できる演算子 - LIKE、IN、BETWEEN、RGB、CASE - の使用方法を示します。","データウィンドウの式","w_dw_expressions","5.0","カラムの color プロパティでデータウィンドウ式を使用し、テキストの色をエンド ユーザが入力した値に基づいて変更します。", 0, 0,"","", 1,"データウィンドウ - イベントと関数","データウィンドウにおける以下のテクニックを示します。　データウィンドウのカラムのデータを、データベースからの検索時の元の値に戻す。　データウィンドウの更新フラグをリセットする。　データウィンドウで修正された行をハイライト表示する。　また、行の検索、更新、削除、挿入を行う一般的なデータウィンドウ関数を使用します。表示されている行、修正された行、削除された行の行数を表示します。","データウィンドウ関数","w_dw_functions","2.0","GetItemString 関数の originalvalue 引数を True に設定して元の値 (データベースから最初に検索された値) を取得し、SetItem 関数を用いて、カラムのデータを元の値に戻します。　ResetUpdate 関数は、データウィンドウの更新フラグをリセットします。　GetNextModified 関数は、データウィンドウで変更された行をすべて検索します。", 0, 0,"","", 1,"データウィンドウ - イベントと関数","データウィンドウに適合する、構造体または OLE オートメーション カスタム クラスNVO を作成するユーティリティです。　データウィンドウのドッ(.)表記による参照を使用して、データウィンドウ間でのデータのコピーを行うことができます。","データウィンドウと構造体ユーティリティ","w_dwtostr","5.0","構造体または OLE オートメーション カスタム クラス NVO のエクスポート構文を生成し、ファイルに保存することができます。　このファイルをインポートして、オブジェクトを作成することができます。", 0, 0,"","", 1,"データウィンドウ - イベントと関数","データウィンドウの入力条件則から、PowerScript 関数を呼び出す方法を示します。","データウィンドウの入力条件則","w_powerscript_in_validation","6.0","データウィンドウのフィールドに入力された値の評価は、データウィンドウのフィールドのプロパティ定義で設定する入力条件則を使用すると、簡単に行なうことができます。入力条件則が複雑になったり、データベースに対する SQL 文の発行などの追加機能が必要な場合は、関数ペインタで追加機能を記述した関数を作成し、使用することができます。このサンプルではデータウィンドウの Dept_id フィールドの入力条件則でグローバル関数を使用しています。部署が入力されると、このグローバル関数は Departmentテーブルを検索し、入力された値が妥当かどうかを検証します。

このサンプル プログラムでは PB 6.0 の新機能であるデータウィンドウのグループボックスを使用しています。", 0, 1,"","", 1,"データウィンドウ - イベントと関数","DBError イベントのデフォルトの動作を上書きし、データベースのカスタム エラー メッセージを表示します。　また、このプログラムで使用しているテクニックを拡張して、特定のデータベース エラー コードに基づいてエラー処理を行うこともできます。","DBError イベント","w_dberror_event","3.0","データウィンドウの DBError イベントの戻り値が 1 に設定されている場合、デフォルトの [データウィンドウ エラー] ダイアログボックスは表示されません。　DBErrorCode 関数と DBErrorMessage 関数を使用すると、データウィンドウでデータベース エラーが起きたときに生成されるデータベース固有のエラー コードおよびメッセージを表示することもできます。", 0, 0,"","", 1,"データウィンドウ - イベントと関数","データウィンドウの計算フィールドを使って作成したデジタル時計です。　Now 関数、Today 関数、データウィンドウの Timer_Interval プロパティを使用します。","デジタル時計","w_clock_using_dw","2.0","このデータウィンドウでは、データウィンドウの Timer_Interval プロパティとデータウィンドウ ペインタ関数 Now および Today を使用して、時計やカレンダーを作成しています。", 0, 0,"","", 0,"データウィンドウ - イベントと関数","ドロップダウン データウィンドウ (以下 DDDW)を使用するテクニックを示します。　このプログラムでは、DDDW に表示する情報の取得、DDDW の明示的な検索、DDDW に対する [検索引数の指定] ダイアログボックスの非表示、DDDW のデータオブジェクトの変更、および DDDW のソートやフィルタなどのテクニックを使用しています。","ドロップダウン データウィンドウのテクニック","w_dddw_techniques","3.0","GetChild 関数を使用して、DDDWのハンドルを取得します。　DDDWのハンドルが得られると、SetTransObject、Retrieve 関数、SetSort 関数、SetFilter 関数などの Powerscript 関数が DDDW 上で実行可能となります。　DDDW のデータ オブジェクトを変更するのに、ドット(.)表記による参照を使用します。　DDDW に対する [検索引数の指定] ダイアログボックスを表示させないためには、DDDW はそのペアレント データウィンドウが検索される前にデータを保持していなければなりません。　つまり、ペアレント データウィンドウで Retrieve 関数を実行する前に、明示的に DDDW を検索するか、または新しい行を DDDW に挿入することによって可能となります。", 0, 0,"","", 1,"データウィンドウ - イベントと関数","クロスタブ提示様式のデータウィンドウは、[クロスタブの定義] ダイアログボックスで指定した情報によって、スプレッド シート形式のレポートを作成します。　クロスタブはデータベース中のデータを表示しますが、変更しません。　クロスタブは、データベースのデータを使用して作表し、分析し、その結果を表示します。　<クロスタブの変更> ボタンによって、クロスタブ定義のカラムと行を変更することができます。","クロスタブ レポートの機能拡張","w_crosstab","4.0","Crosstabdialog 関数を使用します。　また、GetMessage 関数を使用して、データウィンドウが生成するメッセージを取得します。", 0, 0,"","", 1,"データウィンドウ - イベントと関数","データウィンドウの ItemError イベントで Evaluate 関数を使用し、[給与] フィールドに数値を入力できるようにしています。　入力された数値は、次のフィールドに移動した際に評価されます。","Evaluate 関数と ItemError イベント","w_evaluate","3.0","フィールド内の数値式を評価するために、Describe(~"evaluate.....~") 関数を使用します。Evaluate 関数は、データウィンドウの ItemError イベントで呼び出されます。これは、数値フィールドに文字列の式が入力されると、ItemError イベントが起動されるためです注意 : [給与] フィールドには、給与を 0 以下に設定しない入力条件則も含まれています。数値式の場合、数値式の評価後もデータウィンドウのフィールド評価は実行されます。", 0, 0,"","", 1,"データウィンドウ - イベントと関数","ウィンドウには、従業員情報のデータウィンドウと、部署ごとの従業員データを 3 種類のグラフで示したデータウィンドウが表示されています。","グラフと共有データウィンドウ","w_shared_dw_graph","3.0","従業員データは、データベースから一度だけ検索されます。共有データウィンドウというテクニックを使用することによって、(グラフとして表示される) 3 つのデータウィンドウで共通のデータ ソースを使用することができます。主データウィンドウに対する変更内容は、共有のグラフ データウィンドウにも反映されます。グラフ定義のネスト機能は、表示されているデータの前処理に使用されます。給与の円グラフと部署ごとの平均年齢のグラフには退職者は含まれません。これらの関数については、グラフのデータ定義を参照して確認してください。", 0, 0,"","", 1,"データウィンドウ - イベントと関数","水平分割スクロールを設定したデータウィンドウです。分割水平スクロールを設定したデータウィンドウは、同期的に垂直スクロールします。","データウィンドウの水平分割","w_split_hscroll","3.0","Open イベントのスクリプトで、Describe 関数と Modify 関数を使用して最初の分割位置を指定します。

ドット(.)表記による参照を使用して、HorizontalScrollSplit プロパティを最初のカラムの x 座標に設定します。", 0, 0,"","", 0,"データウィンドウ - イベントと関数","Describe および ImportString 関数を使用してデータを 1 つの文字列に保存し、すべての変更を元に戻します。　RowsCopy 関数を使用すると、データウィンドウ間でデータのコピーを行うことができます。","ImportString 関数と RowsCopy関数","w_datawindow_copy","3.0","ドット表示(.)による参照 (datawindow.data) を使用して、データウィンドウのデータを文字列変数にエクスポートすることができます。　ImportString 関数を使用すると、同じデータウィンドウまたは同じデータ形式をもつ別のデータウィンドウに、この文字列変数からデータをインポートすることができます。", 0, 0,"","", 1,"データウィンドウ - イベントと関数","データウィンドウの行とカラムのステータスを表示し、Update 関数によって生成された SQL 構文にどのように影響するかを示します。","項目のステータスと更新","w_item_status","3.0","GetItemStatus 関数と SetItemStatus 関数を使用して、データウィンドウの行とカラムのステータスを取得または設定します。GetSQLPreview 関数は、データウィンドウの Sqlpreview イベントで使用され、Update 関数で生成された SQL 構文を表示します。データウィンドウの計算フィールドは、各行のステータスを表示します。計算フィールドには、フィールドの値によってテキストの色 (Color プロパティ) を変更する式が定義されています。", 0, 0,"","", 1,"データウィンドウ - イベントと関数","データウィンドウ関数 Large および Small を使用し、データウィンドウ内の情報を、ランク付けします。","Large 関数と Small 関数","w_large_small","4.0","データウィンドウの計算カラムでデータウィンドウ関数を使用しています。", 0, 0,"","", 0,"データウィンドウ - イベントと関数","リッチテキスト エディット提示様式のデータウィンドウを使用したビジネス レターです。宛名の部分には、データベースから検索されたデータが挿入されます。","リッチテキスト提示様式のデータウィンドウを使用したメール マージ","w_rte_mail_merge","5.0","リッチテキスト エディット提示様式のデータウィンドウの使用方法を示します。", 0, 0,"","", 1,"データウィンドウ - イベントと関数","このプログラムのデータウィンドウでは、新しい集計関数 Mode および Median を使用しています。また、データウィンドウ オブジェクトのプロパティを式を使用して設定する方法を示します。

Mode 関数と Median 関数は、顧客からの受注データを表示するために使用しています。","Mode 関数と Median 関数","w_mode_median","4.0","PowerBuilder 4.0 から、以下の 2 つのレポート集計関数が追加されました。:
Mode 関数 - 一連の数値の中で最も頻繁に発生している値を取得します。
Median 関数 - 一連の数値の中の中央値を取得します。

緑色のバーはデータウィンドウの詳細区域に配置されている長方形オブジェクトで、[長方形オブジェクト] ダイアログボックスで定義しています。このダイアログボックスでは、式を指定することもできます。つまり、開発環境でデータウィンドウ オブジェクトのプロパティを変更する式を指定できるため、実行時に変更する必要がありません。", 0, 0,"","", 0,"データウィンドウ - イベントと関数","単純なデータウィンドウ レポートです。　ウィンドウ上部のツールバーはヘッダ域に配置されたデータウィンドウのボタンオブジェクトで構成されています。　データウィンドウ機能のすべての処理はデータウィンドウのボタンオブジェクトで記述されています。　ウィンドウで記述するコードは、データウィンドウの検索とウィンドウのクローズだけです。","データウィンドウのボタンオブジェクトを使用したレポート","w_button_report","6.0","このサンプル プログラムでは PowerBuilder 6.0 のデータウィンドウ ボタンオブジェクトの使用方法を説明しています。　２つのユーザ定義ボタンはデータウィンドウ コントロールの buttonclicked イベントを起動して使用します。　スクリプトでウィンドウを閉じるボタンとヘルプを開くボタンのどちらがクリックされたかを判断します。　その他のボタンは事前に定義されているデータウィンドウ関数を実行します。", 1, 0,"","", 1,"データウィンドウ - イベントと関数","SetRowFocusIndicator 関数を使用して、データウィンドウの現行の行を、4 種類のインジケータで指し示します。","行のフォーカスの指定","w_setrowfocus","2.0","インジケータは、以下の 4 種類です。:
なし
長方形 - 行を長方形で囲みます。
ハンド - 現行の行を、組み込みのハンド ポインタで指します。
ピクチャ - 矢印のピクチャ ファイルを使用して行を指します。
", 0, 0,"","", 0,"データウィンドウ - イベントと関数","SHIFT キーまたは CTRL キーを押しながらクリックしたときに、データウィンドウの行を Windows のファイル マネージャのようにハイライト表示する方法を示します。","行選択のテクニック","w_highlight_dw_rows","3.0","データウィンドウの Clicked イベントで、どのキーが押されたかを判断し、ユーザ定義関数を使用して、ファイル マネージャのように行をハイライト表示します。", 0, 0,"","", 1,"データウィンドウ - イベントと関数","マスター/詳細の受注更新画面です。データウィンドウの中で複数行の追加／更新／削除が同時にできるようになっています。PowerBuilder 6.0 の新機能である RowFocusChanging イベントを使用し、データの入力チェックを行ない、データが不正なときは、他の行にフォーカスが移動しないようにしています。","RowFocusChanging イベント","w_update_sales_order","6.0","入力チェックではじかれるデータが行の値として更新されてしまうことを RowFocusChanging イベントを使用して防ぎます。", 1, 0,null null  1,"データウィンドウ - イベントと関数","データウィンドウには使用頻度の高い基本的な従業員情報を表示し、タブ ページのデータウィンドウには、使用頻度の低い従業員詳細情報と住所情報を表示します。","データウィンドウ バッファの共有","w_empl_dw_share_buffers","6.0","ShareData 関数を使用して、3 つの更新可能なデータウィンドウで 1 つのデータ ソースを共有します。　メインのデータウィンドウで行った検索が他の 2 つのデータウィンドウに反映され、他の 2 つのデータウィンドウで行った変更は、メインのデータウィンドウに反映されます。

頻繁に使用しない選択肢やデータは、ウィンドウが煩雑にならないようにタブ コントロールを使用しています。

このサンプル プログラムでは PB 6.0 の新機能であるデータウィンドウのグループボックスを使用しています。
", 0, 1,"","", 1,"データウィンドウ - イベントと関数","データウィンドウとドロップダウン データウィンドウ間でデータを共有するテクニックを示します。　このテクニックは、大きなコード表をドロップダウン データウィンドウとして使用し、コード表が頻繁に再検索される場合に特に有効です。","ドロップダウン データウィンドウの共有","w_shared_dddw","3.0","GetChild 関数を使用して、このサンプル プログラムで使用されている 3 つのドロップダウン データウィンドウへの参照を入手します。　ドロップダウン データウィンドウへの参照を入手したら、ShareData 関数を使用して (アイコン化されているウィンドウ上の) 主データウィンドウとドロップダウン データウィンドウ間でデータを共有させます。　データの共有を解除するには、ShareDataOff 関数を使用します。", 0, 0,"","", 1,"データウィンドウ - イベントと関数","垂直スクロール バーを使用したときに、関連する 2 つのデータウィンドウが、同期を取ってスクロールします。","分割データウィンドウの同時垂直スクロール","w_scroll_2_datawindows","2.0","データウィンドウの ScrollVertical イベントと ScrollVerticalPostion プロパティを使用して、2 つのデータウィンドウの垂直スクロールが同期を取るようにしています。
単一のデータウィンドウでこれと同様の効果を得るには、PowerBuilder の水平スクロールバーの分割機能を使用します。", 0, 0,"","", 0,"データウィンドウ - イベントと関数","contact テーブルの単純な追加／更新／削除を行うメンテナンス ウィンドウです。　データウィンドウの機能は、全てデータウィンドウ上に配置されたボタンによって処理されます。　ウィンドウに記述するスクリプトは、データウィンドウの検索とウィンドウのクローズのみです。","データウィンドウ ボタンを使用したテーブル管理","w_contact_maintenance","6.0","PowerBuilder 6.0 の新機能であるデータウィンドウ ボタンの動作を紹介します。　ボタンの処理には、行の追加、行の削除、更新処理、先頭行、最終行、次行、前行へのスクロールなど、いくつかのタイプがあります。　データウィンドウ コントロールの buttonclicked イベントにはユーザ定義ボタンの処理を記述することができます。　ここではウィンドウを閉じたり、ヘルプファイルを開く処理をしています。", 1, 0,"","", 1,"データウィンドウ - イベントと関数","この例では、RowsMove 関数を使用してデータウィンドウから最後に削除した行を復元します。","削除した行の復元","w_undelete_row","4.0","RowsMove 関数は、データウィンドウの削除バッファから主バッファに行を移動するために使用されます。このサンプル プログラムでは、データウィンドウから最後に削除した行のみを復元することができます。UnDeleteRow 関数が実行されると、削除バッファ内に存在する最後に削除された行は主バッファに戻されて、データウィンドウの元の位置に復元されます。", 0, 0,"","", 1,"データウィンドウ - 検索","データウィンドウの検索処理と印刷処理を、途中でキャンセルする方法を示します。","検索および印刷のキャンセル","w_cancel_retrieval","2.0","データウィンドウの RetrieveStart、RetrieveRow、および RetrieveEnd イベントで、ユーザからの検索要求のキャンセルをモニターします。PrintDataWindow 関数は、[キャンセル] ダイアログボックスの表示 / 非表示を指定するオプション の引数を持ちます。", 0, 0,"","", 1,"データウィンドウ - 検索","データウィンドウからデータベースに接続する場合に、SetTrans 関数と SetTransObject 関数では何が違うのかを示します。","データベースへの接続","w_connect_db","2.0","SetTrans 関数と SetTransObject 関数は、内部的なトランザクション オブジェクトを使用してデータウィンドウがデータベースと接続するために使用されます。SetTransObject 関数を使用すると、開発者がトランザクション管理 (コミット / ロールバック) を行うことができます。SetTrans 関数を使用すると、トランザクション管理は自動的に行われます。", 0, 0,"","", 1,"データウィンドウ - 検索","検索した従業員データを部署ごとにグループ化し、各部署の給与の小計と共に表示するレポートです。このレポートは印刷することができます。印刷されるレポートのフォーマットは、PowerBuilder のスクリプトで処理されています。","グループ化と計算フィールド","w_print_employee_roster_dw","4.0","データウィンドウのさまざまな印刷関数の使い方を示します。給与の平均、最大、最小を得るためにデータウィンドウの計算関数を使用しています。部署名によるソートがデータウィンドウで指定されています（4.0 の新機能）。4.0 の新しい保存ウィンドウでは、Report (PSR 形式で保存) あるいは WMF (メタファイル形式で保存) の形式で保存できます。", 0, 0,"","", 0,"データウィンドウ - 検索","このウィンドウには、データウィンドウのラベル提示様式で利用可能なすべてのラベルが含まれています。選択したラベルで、表示が変更されます。","宛名ラベル","w_labels","3.0","PBLAB050.INI ファイルから、有効なラベルをすべて読み込みます。この処理は、ウィンドウ関数で行っています。ラベルの種類を変更すると、そのラベルのプロパティが PBLAB050.INI ファイルから読み込まれ、ドット(.)表記による参照で変更されます。ラベル提示様式のデータウィンドウは、印刷プレビュー モードで表示されます。ドット(.)表記による参照でで印刷プレビュー ズームのプロパティ (Datawindow.print.preview.zoom) を変更することによって、表示ズーム レベルを変更しています。", 0, 0,"","", 0,"データウィンドウ - 検索","このプログラムのデータウィンドウでは、新しい集計関数 Mode および Median を使用しています。また、データウィンドウ オブジェクトのプロパティを式を使用して設定する方法を示します。

Mode 関数と Median 関数は、顧客からの受注データを表示するために使用しています。","Mode 関数と Median 関数","w_mode_median","4.0","PowerBuilder 4.0 から、以下の 2 つのレポート集計関数が追加されました。:
Mode 関数 - 一連の数値の中で最も頻繁に発生している値を取得します。
Median 関数 - 一連の数値の中の中央値を取得します。

緑色のバーはデータウィンドウの詳細区域に配置されている長方形オブジェクトで、[長方形オブジェクト] ダイアログボックスで定義しています。このダイアログボックスでは、式を指定することもできます。つまり、開発環境でデータウィンドウ オブジェクトのプロパティを変更する式を指定できるため、実行時に変更する必要がありません。", 0, 0,"","", 0,"データウィンドウ - 検索","このウィンドウでは、データウィンドウの同一行に 2 種類のレコードを表示します。データは employee テーブルから読み込まれます。また、類似するレポートのフォーマットについて、[段組みカラムとカラムのスライド] サンプル プログラムを参照してください。","段組みデータウィンドウ","w_n_up","3.0","このプログラムで示すデータウィンドウは、段組みレポートの作成に適しています。", 0, 0,"","", 0,"データウィンドウ - 検索","表示や印刷のために各種のネスティッド レポートを開くことができる MDI の例です。ネスティッド レポートや、コンポジット提示様式データウィンドウの使い方を示します。","ネスティッド レポート","w_nested_frame","4.0","データウィンドウでレポートをネストする方法と、ネスティッド レポートに検索引数や検索条件を定義する方法を示します。また、コンポジット提示様式のデータウィンドウも表示します。
", 0, 0,"","", 1,"データウィンドウ - 検索","データウィンドウ ペインタの [印刷の仕様] ダイアログボックスで、段組カラムを設定しています。スライド カラム (左へスライド) も設定されています。 [段組データウィンドウ] サンプル プログラムの類似したレポートも参照してみてください。","段組みカラムとカラムのスライド","w_newspaper_slide_columns","4.0","データベースの顧客情報を、電話帳のようにアルファベット順で表示します。データは 3 段で表示されています。ページの最後までデータが達した場合、そのリストは次の段にスライドします (これがカラムの段組みプロパティです)。また、名前カラムが名字カラムにスライドしています。名前カラムと名字カラムは同一フィールドにあるわけではありません。名前カラムに [左へスライド] が設定されています。
", 0, 0,"","", 1,"データウィンドウ - 検索","あるデータウィンドウを、１つのクエリを使用して７種類の提示様式で表示します。","データウィンドウの提示様式","w_datawindow_style_frame","3.0","MDI フレームの各シートは、異なる提示様式を選択することができます。各シートは、1 つのウィンドウの異なるインスタンスです。データウィンドウ オブジェクトは、各ウィンドウのシートを開いたときに変更されます。実際にデータを検索しているのは 1 つのデータウィンドウのみで、その他のデータウィンドウは Share 関数でデータを共有しています (ただしデータを共有できないクロスタブ提示様式のデータウィンドウを除きます)。", 0, 0,"","", 1,"データウィンドウ - 検索","データウィンドウ (ソース、オブジェクト、データ) は、拡張子 PSR のファイルに保存することができます。　PSR ファイルは、実行環境および開発環境のどちらでも見ることができます。　このサンプル プログラムでは、エンド ユーザがディレクトリ リストから選択した PSR ファイルを、画面上に表示します。　データはオブジェクトと共に PSR ファイルに格納されているため、データベースに接続する必要はありません。

PowerBuilder 5.0 では、ネスティッド レポートおよびコンポジット レポートも PSR ファイルとして保存できるようになりました。　このサンプル プログラムのディレクトリには、comprep.psr 、 nestrep.psr などの PSR ファイルが格納されています。","PSR（レポートファイル）ビューア","w_psr_viewer","5.0","データウィンドウの Dataobject プロパティに、PSR ファイル名を設定します。　データのロード後、データウィンドウおよびウィンドウのサイズは、データウィンドウの内容の大きさにできるかぎり合うように調整されます。", 0, 0,"macintosh","", 1,"データウィンドウ - 検索","データウィンドウをクエリ モードや検索モードに設定する方法を示しています。","クエリ モード","w_dw_criteria","3.0","ドット(.)表記による参照を使用してデータウィンドウの QueryMode プロパティを Yes に設定することによって、データウィンドウをクエリ モードに設定します。", 0, 0,"","", 1,"データウィンドウ - 検索","部署ごとに従業員の給与をまとめたレポートを、データウィンドウで作成しています。計算フィールドで他の計算フィールドを参照することによって、各従業員の給与の部署平均からの偏差値と、各部署の勤続年数の統計を算出しています。","計算フィールドの参照","w_computed_reference","4.0","計算フィールドの式において、他の計算フィールドを参照したり使用する方法を示します。", 0, 0,"","", 0,"データウィンドウ - 検索","このサンプル プログラムでは各部署の従業員情報と給与をネステッド レポートに表示します。部署の平均給与以上、以下の従業員の給与に対して、昇給率を設定したり、昇給後の給与や給与合計額を参照することができます。","ドット(.)表記によるネスティッド レポート プロパティの参照","w_nested_reference","5.0","このサンプル プログラムはネステッド レポートやコンポジット レポートのカラムやデータをドット(.)表記を使用して参照する方法を示しています。", 0, 0,"","", 1,"データウィンドウ - 検索","エンド ユーザにデータウィンドウの検索引数を入力します。　データウィンドウが検索されると、レポートが表示され、検索引数はレポートのフッタ部分に表示されます。","検索引数の参照","w_show_retrieve_arg","4.0","データウィンドウの検索引数を参照するときの計算フィールドの使い方を示します。　GetData 関数を使用し、データウィンドウに対する開始日付と終了日付の検索引数を取得します。　GetData 関数は、バージョン 4.0 から加えられた、エディット マスクの関数です。", 0, 0,"","", 0,"データウィンドウ - 検索","データウィンドウに必要な行だけを検索して集計関数を実行する方法を示します。　また、[すべての行を検索したデータウィンドウ] と [必要な行だけを検索したデータウィンドウ] では、同じクエリでも検索時間がどのくらい違うか比較します。","集計関数と必要な行だけ検索","w_retrieve_asneeded","3.0","通常、必要な行だけを検索するデータウィンドウでは、そこで使用されるすべての集計関数は必要な行だけを検索する機能を上書きします。　このサンプル プログラムでは、埋め込み SQL を使用して必要な集計値をまず検索し、次にデータウィンドウのテキスト オブジェクトにドット(.)表記による参照を使用して、集計値が表示されるようにしています。", 0, 0,"","", 1,"データウィンドウ - 実行時の変更","特定の条件に合う従業員の給与データを、GetItem 関数、SetItem 関数、Modify 関数、Describe 関数を使用せず、PowerBuilder 5.0 のドット(.)表記による参照を使用して変更します。","従業員の給与の変更","w_salary_admin","5.0","このサンプル プログラムでは、Describe 関数ではなくドット(.)表記による参照を使用して、入力された条件に基づき行を特定します。　<変更する従業員をハイライトする> ボタンは、Modify 関数を使用してオブジェクトのプロパティを変更するのではなく、直接ドット(.)表記を使ってデータウィンドウ上のオブジェクトを参照して、条件にマッチした行をハイライト表示します。　<従業員給与計算> ボタンでは、SetItem 関数を使わずにデータウィンドウに値をセットする方法を示します。", 0, 0,"","", 1,"データウィンドウ - 実行時の変更","データウィンドウから別のデータウィンドウへ、構造体の配列を使用してデータをコピーします。","データウィンドウのコピー","w_dw_copy","5.0","データウィンドウのデータ構造と一致する構造体の配列を宣言する方法を示します。ドット (.) 表記を使用したオブジェクトの参照を使用して配列にデータをコピーし、次にこのデータを別のデータウィンドウにコピーします。この方法で行うと、より速くデータのコピーを行うことができます。", 0, 0,"","", 1,"データウィンドウ - 実行時の変更","PowerBuilder 5.0 で新しく追加されたデータウィンドウ式で使用できる演算子 - LIKE、IN、BETWEEN、RGB、CASE - の使用方法を示します。","データウィンドウの式","w_dw_expressions","5.0","カラムの color プロパティでデータウィンドウ式を使用し、テキストの色をエンド ユーザが入力した値に基づいて変更します。", 0, 0,"","", 1,"データウィンドウ - 実行時の変更","スピン コントロールのデータ型を変更したときに、スピン コントロールのプロパティがどのように変わるかを示します。　エディットマスクの変更、コード表の使用の指定、スピンの増減値、最大値、最小値の指定が可能です。","データウィンドウのスピン コントロール","w_spin_controls","3.0","ドット (.) 表記を使用して、スピン コントロールのプロパティを変更します。　また、データウィンドウのドロップダウン リストボックスに動的に値を入れる方法を示します。", 0, 0,"","", 1,"データウィンドウ - 実行時の変更","年度ごとの歳入を表示するグラフです。　ボタンをクリックすると、四半期ごとの歳入を示すグラフ系列が追加されます。","グラフへのデータ系列の動的な追加","w_graph_dynamic_series","4.0","Modify 関数を使用してグラフ系列の追加 / 削除を行います。", 0, 0,"","", 1,"データウィンドウ - 実行時の変更","データウィンドウの ItemError イベントで Evaluate 関数を使用し、[給与] フィールドに数値を入力できるようにしています。　入力された数値は、次のフィールドに移動した際に評価されます。","Evaluate 関数と ItemError イベント","w_evaluate","3.0","フィールド内の数値式を評価するために、Describe(~"evaluate.....~") 関数を使用します。Evaluate 関数は、データウィンドウの ItemError イベントで呼び出されます。これは、数値フィールドに文字列の式が入力されると、ItemError イベントが起動されるためです注意 : [給与] フィールドには、給与を 0 以下に設定しない入力条件則も含まれています。数値式の場合、数値式の評価後もデータウィンドウのフィールド評価は実行されます。", 0, 0,"","", 1,"データウィンドウ - 実行時の変更","Describe および ImportString 関数を使用してデータを 1 つの文字列に保存し、すべての変更を元に戻します。　RowsCopy 関数を使用すると、データウィンドウ間でデータのコピーを行うことができます。","ImportString 関数と RowsCopy関数","w_datawindow_copy","3.0","ドット表示(.)による参照 (datawindow.data) を使用して、データウィンドウのデータを文字列変数にエクスポートすることができます。　ImportString 関数を使用すると、同じデータウィンドウまたは同じデータ形式をもつ別のデータウィンドウに、この文字列変数からデータをインポートすることができます。", 0, 0,"","", 1,"データウィンドウ - 実行時の変更","実行時にオブジェクトのプロパティを変更し、データウィンドウを変更します。　Describe、Modify 関数と、PowerBuilder 5.0 の データウィンドウ　プロパティのドット(.)表記による参照使用方法を説明します。","データウィンドウ プロパティの変更","w_customize_dw","5.0","このサンプル プログラム では、2 つのタブ ページから構成されるタブ コントロールを使用しています。　第 1 タブでは、 Describe 関数と Modify関数を使用してデータウィンドウ オブジェクトのプロパティを変更します。　Describe 関数を使用してデータウィンドウ上のすべてのオブジェクト名を取得し、この取得したオブジェクト名を、AddItem 関数を使用してリストボックスに表示します。　オブジェクトを選択すると、Describe 関数が呼び出され、選択したオブジェクトの種類が取得され、[プロパティ] リストボックスに、その種類に対応するプロパティが表示されます。　オブジェクトとプロパティを選択すると、Modify 関数の構文が作成されます。

第 2 タブでは、ドット(.)表記による参照を使用して、選択したオブジェクトのプロパティを変更します。", 0, 0,"","", 1,"データウィンドウ - 実行時の変更","データウィンドウ ペインタの Quick Select オプションに基づくウィンドウを使用する MDI アプリケーションです。　作成したデータウィンドウは、[ファイル] - [データウィンドウの保存] を使用するとPowerBuilder ライブラリに保存できます。","実行時のデータウィンドウ ペインタ","w_mdi_quick_select","3.0","SyntaxFromSQL 関数を使用して SQL 文からデータウィンドウを動的に作成します。データウィンドウが作成されると、Describe 関数でカラムの属性値を参照できます。Modify 関数を使用すれば属性値を変更できます。ダイアログの保存では DirList 関数を使用して PBL の一覧を表示します。データウィンドウを保存するには LibraryImport 関数を使用します。", 0, 0,"","", 1,"データウィンドウ - 実行時の変更","SetSort 関数、Sort 関数、SetFilter 関数、Filter 関数、Update 関数、Retrieve 関数、InsertRow 関数、DeleteRow 関数、 Print 関数など、さまざまなデータウィンドウ関数の使用方法を示します。","ソートおよびフィルタの指定","w_sort_and_filter","2.0","上部のドロップダウン リストボックスには、現行データウィンドウのカラム名がリストされています。　これらのカラム名は、Describe 関数が返す構文を分析することによって動的にロードされます。　フィルタの選択時には、演算子の右側に固有なデータのみがロードされます。", 0, 0,"","", 1,"データウィンドウ - 更新","新規の行の追加はできて既存データの変更ができない、データウィンドウを作成する方法を示します。","追加のみ可能なデータウィンドウ","w_entry_only","4.0","データウィンドウのカラムの Protect プロパティに式を指定して、式の戻り値に基づいて、 Protect プロパティの値をオンとオフに切り替えることができます (Protect プロパティに対して式を指定するには、データウィンドウ ペインタのカラム上で右クリックし、ポップアップ メニューから [プロパティ] を選択します)。このプログラムでは、データウィンドウ内のすべてのカラムの Protect プロパティに対する式で、IsRowNew 関数を使用しています。データウィンドウの行が新規の場合はそのすべてのカラムの Protect プロパティを 0 (オフ) に、既存の行の場合は 1 (オン) に設定します。また、カラムの背景色に対しても同様に処理されます。", 0, 0,"","", 0,"データウィンドウ - 更新","電話対応した情報を格納するデータベース テーブル のデータをメンテナンスするためのウィンドウで、データの追加、更新、削除ができます。ここでは、テーブルのカラムのデフォルトに AutoIncrement を指定し、データを追加したときに、自動的にユニークなIDが割り当てられるようにしています。","AutoIncrement - コール トラック","w_call_track","4.0","call_track テーブルの ID カラムのデフォルトに AutoIncrement を指定しているので、データを追加したときに、自動的にユニークなIDが割り当てられます。開発者がスクリプトに ID の制御を記述する必要はありません。", 0, 0,"","", 1,"データウィンドウ - 更新","データウィンドウのテキスト エディット ボックスからデータを取得する方法を示します。
","カラムのテキスト値と項目値","w_dw_items","2.0","AcceptText 関数と GetText 関数を内部的に呼び出します。
", 0, 0,"","", 1,"データウィンドウ - 更新","データウィンドウにおける以下のテクニックを示します。　データウィンドウのカラムのデータを、データベースからの検索時の元の値に戻す。　データウィンドウの更新フラグをリセットする。　データウィンドウで修正された行をハイライト表示する。　また、行の検索、更新、削除、挿入を行う一般的なデータウィンドウ関数を使用します。表示されている行、修正された行、削除された行の行数を表示します。","データウィンドウ関数","w_dw_functions","2.0","GetItemString 関数の originalvalue 引数を True に設定して元の値 (データベースから最初に検索された値) を取得し、SetItem 関数を用いて、カラムのデータを元の値に戻します。　ResetUpdate 関数は、データウィンドウの更新フラグをリセットします。　GetNextModified 関数は、データウィンドウで変更された行をすべて検索します。", 0, 0,"","", 1,"データウィンドウ - 更新","DBError イベントのデフォルトの動作を上書きし、データベースのカスタム エラー メッセージを表示します。　また、このプログラムで使用しているテクニックを拡張して、特定のデータベース エラー コードに基づいてエラー処理を行うこともできます。","DBError イベント","w_dberror_event","3.0","データウィンドウの DBError イベントの戻り値が 1 に設定されている場合、デフォルトの [データウィンドウ エラー] ダイアログボックスは表示されません。　DBErrorCode 関数と DBErrorMessage 関数を使用すると、データウィンドウでデータベース エラーが起きたときに生成されるデータベース固有のエラー コードおよびメッセージを表示することもできます。", 0, 0,"","", 1,"データウィンドウ - 更新","ドロップダウン データウィンドウ (以下 DDDW)を使用するテクニックを示します。　このプログラムでは、DDDW に表示する情報の取得、DDDW の明示的な検索、DDDW に対する [検索引数の指定] ダイアログボックスの非表示、DDDW のデータオブジェクトの変更、および DDDW のソートやフィルタなどのテクニックを使用しています。","ドロップダウン データウィンドウのテクニック","w_dddw_techniques","3.0","GetChild 関数を使用して、DDDWのハンドルを取得します。　DDDWのハンドルが得られると、SetTransObject、Retrieve 関数、SetSort 関数、SetFilter 関数などの Powerscript 関数が DDDW 上で実行可能となります。　DDDW のデータ オブジェクトを変更するのに、ドット(.)表記による参照を使用します。DDDW に対する [検索引数の指定] ダイアログボックスを表示させないためには、DDDW はそのペアレント データウィンドウが検索される前にデータを保持していなければなりません。　つまり、ペアレント データウィンドウで Retrieve 関数を実行する前に、明示的に DDDW を検索するか、または新しい行を DDDW に挿入することによって可能となります。", 0, 0,"","", 1,"データウィンドウ - 更新","データウィンドウの行とカラムのステータスを表示し、Update 関数によって生成された SQL 構文にどのように影響するかを示します。","項目のステータスと更新","w_item_status","3.0","GetItemStatus 関数と SetItemStatus 関数を使用して、データウィンドウの行とカラムのステータスを取得または設定します。GetSQLPreview 関数は、データウィンドウの Sqlpreview イベントで使用され、Update 関数で生成された SQL 構文を表示します。データウィンドウの計算フィールドは、各行のステータスを表示します。計算フィールドには、フィールドの値によってテキストの色 (Color プロパティ) を変更する式が定義されています。", 0, 0,"","", 1,"データウィンドウ - 更新","データウィンドウのソースに２つのテーブルを用いています。　エンド ユーザは、両方またはいずれかのテーブルのフィールドを、データウィンドウから更新することができます。","１つのデータウィンドウにおける複数テーブルの更新","w_mult_tab_update","3.0","主テーブルが最初に更新されます。　次に、ドット(.)表記による参照を使用して、データウィンドウの更新可能カラムとキー カラムプロパティの設定値を逆の値に切り替えます。　新しい設定でもう １ 度、Update 関数が実行されます。", 0, 0,"","", 0,"データウィンドウ - 更新","データウィンドウには使用頻度の高い基本的な従業員情報を表示し、タブ ページのデータウィンドウには、使用頻度の低い従業員詳細情報と住所情報を表示します。","データウィンドウ バッファの共有","w_empl_dw_share_buffers","6.0","ShareData 関数を使用して、3 つの更新可能なデータウィンドウで 1 つのデータ ソースを共有します。　メインのデータウィンドウで行った検索が他の 2 つのデータウィンドウに反映され、他の 2 つのデータウィンドウで行った変更は、メインのデータウィンドウに反映されます。

頻繁に使用しない選択肢やデータは、ウィンドウが煩雑にならないようにタブ コントロールを使用しています。

このサンプル プログラムでは PB 6.0 の新機能であるデータウィンドウのグループボックスを使用しています。
", 0, 1,"","", 1,"データウィンドウ - 更新","この例では、RowsMove 関数を使用してデータウィンドウから最後に削除した行を復元します。","削除した行の復元","w_undelete_row","4.0","RowsMove 関数は、データウィンドウの削除バッファから主バッファに行を移動するために使用されます。このサンプル プログラムでは、データウィンドウから最後に削除した行のみを復元することができます。UnDeleteRow 関数が実行されると、削除バッファ内に存在する最後に削除された行は主バッファに戻されて、データウィンドウの元の位置に復元されます。", 0, 0,"","", 1,"ドラッグとドロップ","部署名と従業員を選択し、従業員を [従業員詳細] セクションにドラッグすると、その詳細情報が表示されます。　また、従業員の顔のアイコンをドラッグして [勤務状況] ボックスのピクチャにドロップすると、勤務状況を変更することができます。","従業員の勤務状態の変更","w_change_emp_status","3.0","Drag 関数、DraggedObject 関数、および DragDrop イベントを使用して、ドラッグ アンド ドロップで詳細情報の表示や勤務状況の変更を行います。　また、DragEnter および DragLeave イベントを使用して、ウィンドウの下部にマイクロヘルプを表示しています。　このプログラムは、MouseMove イベントで GetObjectAtPointer 関数を使用する良い例です。", 0, 0,"","", 0,"ドラッグとドロップ","マルチプル ドキュメント インタフェース (MDI) のフレーム ウィンドウで、3 つの異なるレポート ウィンドウ (MDI シート) のインスタンスを開きます。　任意のレポート ウィンドウ上に部署名をドラッグすると、その部署のレポートが表示されます。","部署レポート","w_mdi_main","2.0","オブジェクトをあるウィンドウから別のウィンドウにドラッグする方法と、DragDrop イベントで、ドロップしたオブジェクトの種類を入手する方法を示します。　また、ウィンドウ間で情報を渡すために Message オブジェクトを使用しています。", 0, 0,"","", 1,"ドラッグとドロップ","PowerBuilder のロゴがジグソー パズルになっています。","PowerPuzzle","w_puzzle","5.0","標準ユーザ オブジェクトとドラッグ アンド ドロップ機能の使用方法を示します。", 0, 0,"","", 1,"ドラッグとドロップ","ツリービュー上の従業員をドラッグ アンド ドロップで、別の部署に移動することができます。","ツリービュー上のドラッグ アンド ドロップ","w_employee_xfer","5.0","ツリービューの項目をドラッグして、ツリービュー コントロールを更新する方法を示します。", 0, 0,"","", 1,"関数 - 外部","システム情報 (使用可能な GDI、ユーザ、フリー メモリー、およびユーザ ID ) を表示します。","システム情報","w_about_system","3.0","外部関数の定義方法およびスクリプトからの呼び出し方を示します。", 0, 0,"macintosh","", 0,"関数 - 外部","Windows の SDK 関数の使用例を示します。　関数は、外部関数として宣言され、PowerScript言語を拡張することができます。　また、Handle 関数を使用し、Windows の SDK 関数で必要とする内部的なウィンドウ ハンドルを取得します。","Windows SDK 関数","w_sdk_functions","2.0","ローカル外部関数を宣言し、呼び出します。　利用可能なドライブは、PowerBuilder の DirList 関数を使用して判断します。", 0, 0,"macintosh","", 0,"関数 - 外部","プログラム名を選択し、PowerBuilder アプリケーションからの実行、プログラムが実行中かどうかの検証を行います。","PB アプリケーションからプログラムを実行","w_file_functions","3.0","PowerBuilder の Run 関数を使用すると、PowerBuilder 環境の外からプログラムを実行することができます。　Windows の API 関数を使用すると、プログラムがすでに実行中かどうか、および実行中のインスタンス数を確認できます。　これは、一度に 1 つのアプリケーションだけを実行したい場合に役立ちます。　この検証処理は、アプリケーションの Open イベントで行うことができます。", 0, 0,"macintoshsol2hpuxaix","", 1,"関数 - PowerScript","ユーザが入力したループ回数が処理された経過時間を、CPU 関数で算出します。","CPU 関数と Yield 関数","w_cpu","2.0","CPU 関数は、プログラムの開始からの経過時間を返し、時間はマイクロ秒単位で計測されます。　開始時間と終了時間の差を比較すると、1000 分の 1 秒単位で処理時間が計測できます。　Yield 関数を使用すると、プログラム実行中に他のウィンドウのイベントを起動することができます。　イベントが起動したら、処理が完了するまで CPU 関数を利用します。　<スタート> ボタンの Clicked イベントで、ループ処理が終わると CPU 関数を実行するように指定しています。　ループ回数に大きな値を指定した場合は、ウィンドウのセッションがロックされたように見えることがあります。　Yield 関数を用いると、このループ処理に割り込むことができるので、他のイベント (<ストップ> ボタンの Clicked イベントなど) を起動することができます。", 0, 0,"","", 0,"関数 - PowerScript","日付を操作するユーザ定義関数や PowerScript 関数を使用します。","Date 関数","w_date_functions","2.0","PowerScript 関数 DayNumber、DayName、RelativeDate、DaysAfter を使用します。　ユーザ定義関数 f_check_date は、｢日付｣ と ｢曜日｣ の組み合わせが正しいかどうかを判定します。　f_closest_date関数は、指定された日付に最も近い曜日を判定します。", 0, 0,"","", 1,"関数 - PowerScript","汽車がウィンドウを横切る簡単なアニメーションの例です。","アニメーション - 汽車","w_train","2.0","Timer 関数と Timer イベントを使用します。　表示されている各種のボタンを使用して、汽車を停止させたり、スピードを速めたりすることができます。", 0, 0,"","", 0,"関数 - PowerScript","実行時に以下の内容を決定します。:
   オペレーティング システムとそのバージョン
   CPU の種類
   Powerbuilder のバージョン
   サポートしている表示色の数
   スクリーンの幅と高さ","GetEnvironment 関数","w_getenvironment","4.0","GetEnvironment 関数を使用して、Environmentオブジェクトの値を取得し、構造体変数に値を設定します。", 0, 0,"","", 0,"関数 - PowerScript","このサンプル プログラムでは、コントロールに対して関数を呼び出す前に、その関数を使用することができるかどうかを判断するメタクラス関数の使用方法を示しています。　ウィンドウ上に配置されたコントロールのいくつかに対し、切り取り、コピー、貼り付けの関数を実行することができます。　これらの機能の一つをメニューから選択すると、現行のコントロールのクラス定義に基づいて、その関数を呼び出すことが可能かどうかが判断されます。","メタクラス関数の機能","w_cut_copy_paste","6.0","メタクラス関数の FindClassDefinition 関数と FindMatchingFunction 関数を使用して、現行のコントロールのクラス定義を取得し、要求された関数の実行が可能かどうかを判断しています。", 1, 0,null null  1,"関数 - PowerScript","PopulateError 関数を使用して error オブジェクトの値を設定する例です。　入力された値をチェックし、値にエラーがあれば error オブジェクトのエラー メッセージを設定します。　メッセージを表示するために SystemError イベントをを起動する SignalError 関数を使用しています。","PopulateError 関数","w_populateerror","6.0","error オブジェクトのエラー番号とエラー メッセージのテキストを設定するために PopulateError 関数を使用しています。　SystemError イベントを起動するために SignalError 関数を使用しています。　エラー処理を行なうためには SystemError イベントにスクリプトを記述しておく必要があります。　この SystemError イベントの中では、error オブジェクトのプロパティを表示するためのウィンドウを開いています。　ウィンドウではアプリケーションを終了するのか、継続するのかがコマンドボタンで選択できるようになっています。", 1, 0,null null  1,"関数 - PowerScript","水族館です。","アニメーション - 水族館","w_fish","5.0","Timer 関数と Draw 関数を使用して魚を動かします。", 0, 0,"","", 0,"関数 - PowerScript","画面上に表示されている個々のオブジェクトを印刷します。　スケールを調整してスクリーン全体を印刷することもできます。このほか、エディットマスクを使用したスピン コントロールで、幅と高さを調整することができます。","オブジェクトの印刷と画面の印刷","w_print_examples","4.0","画面上のオブジェクトは、リストボックスに動的にロードされます。　ユーザは、印刷したいオブジェクトを指定し、Object.Print 関数を使用してオブジェクトごとに 1 つの印刷ジョブで印刷することができます。

PrintScreen 関数は、画面全体を対象とし、1 つの印刷ジョブで印刷します。", 0, 0,"","", 1,"関数 - PowerScript","検索した従業員データを部署ごとにグループ化し、各部署の給与の小計と共に表示するレポートです。　このレポートは印刷することができます。　印刷されるレポートのフォーマットは、PowerBuilder のスクリプトで処理されています。","スクリプトにおけるデータウィンドウ印刷処理","w_print_employee_roster","2.0","さまざまな印刷関数の使い方を示します。　<印刷> ボタンのスクリプトには、データウィンドウの各行を印刷する処理が記述されています。", 0, 0,"","", 0,"関数 - PowerScript","Windows 95 スタイルのレジストリ エディタです。　PowerBuilder 5.0 のツリー ビュー / リスト ビュー コントロールとレジストリ関数を使用して、レジストリの表示と更新を行います。

Windows 95 または Windows NT をご使用の場合は、このサンプルのコンフィグレーション情報は、example.ini ではなく、レジストリに格納されています。このサンプル プログラムの起動時に、コンフィグレーション情報を入手するレジストリは、重要なシステム設定情報を含むので、このサンプル プログラムで行う変更は、Code Examples の下位情報だけに留めることを強くお勧めします。レジストリの更新には十分お気をつけください。","レジストリ エディタ","w_regedit","5.0","このサンプル プログラムでは、PowerBuilder 5.0 のレジストリ関数 (RegistyGet、RegistySet、RegistyDelete、RegistyKeys、RegistyValues) を使用します。

また、ツリービュー コントロールの基本的な使用方法を示します。　ツリーの第 1 レベルは、ウィンドウの Open イベントで追加されます。　それ以降のレベルは、必要な時点で追加されます。　スクリプトは、ツリービューの ItemPopulate イベントに記述されています。　ItemPopulate イベントは、ツリーの各項目に対して 1 度起動されます (つまり、その項目が初めて展開されたときに起動されます)。　現行の項目への絶対パスを判定するために、再帰が使用されています。

このサンプル プログラムは、ツリー ビューとリスト ビュー コントロールを組み合わせて、Windows 95 のエクスプローラに似たインタフェースを作成しています。", 0, 0,"macintoshsol2hpuxaix","", 1,"関数 - PowerScript","Windows95 と Windows NT のレジストリを PowerBuilder の関数で操作します。

PowerBuilder 6.0 の新機能である string 型以外のデータの読み書きに焦点を絞っています。

","レジストリ関数","w_registry_functions","6.0","このサンプル プログラムでは RegistryGet、RegistrySet 関数を使用します。

有効なデータ型:
String
ExpandString - 環境変数への非拡張参照を含む文字列
Binary
ULong
MultiString - String 型の値の可変長配列", 1, 0,"macintoshsol2hpuxaix",null  1,"関数 - PowerScript","プログラム名を選択し、PowerBuilder アプリケーションからの実行、プログラムが実行中かどうかの検証を行います。","PB アプリケーションからプログラムを実行","w_file_functions","3.0","PowerBuilder の Run 関数を使用すると、PowerBuilder 環境の外からプログラムを実行することができます。　Windows の API 関数を使用すると、プログラムがすでに実行中かどうか、および実行中のインスタンス数を確認できます。　これは、一度に 1 つのアプリケーションだけを実行したい場合に役立ちます。　この検証処理は、アプリケーションの Open イベントで行うことができます。", 0, 0,"macintoshsol2hpuxaix","", 1,"関数 - PowerScript","西暦 2000 年問題について PowerBuilder がどのように機能するかを示します。　データウィンドウとウィンドウ、それぞれでのdate型の操作の例が含まれています。","2000 年問題のサンプル","w_date_frame","6.0","２桁、４桁それぞれの書式での入力、並び替え、書式変換をおこないます。　２桁の年入力では 00-49 年までは 2000 年代として、50-99 年までは 1900 年代として扱われます。", 1, 0,null null  1,"関数 - PowerScript","このサンプル プログラムでは、PB8.0で追加されたファイルシステム操作関数を紹介しています。","ファイルシステム関数","w_runtime_filefunctions","8.0","ファイルシステムを制御する関数です。", 1, 0,null null  0,"関数 - PowerScript","このサンプル プログラムでは、PB8.0で追加されたプリンター関連の関数を紹介しています。","プリンタ関数","w_runtime_printfunctions","8.0","プリンタの状況の取得と制御を行います。", 1, 0,null null  0,"関数 - PowerScript","このサンプル プログラムでは、PB8.0で追加されたシステム関連の関数を紹介しています。","システム関数","w_runtime_systemfunctions","8.0","種々のランタイム関連の拡張です。", 1, 0,null null  0,"関数 - ユーザ定義","データウィンドウの入力条件則から、PowerScript 関数を呼び出す方法を示します。","データウィンドウの入力条件則","w_powerscript_in_validation","6.0","データウィンドウのフィールドに入力された値の評価は、データウィンドウのフィールドのプロパティ定義で設定する入力条件則を使用すると、簡単に行なうことができます。入力条件則が複雑になったり、データベースに対する SQL 文の発行などの追加機能が必要な場合は、関数ペインタで追加機能を記述した関数を作成し、使用することができます。このサンプルではデータウィンドウの Dept_id フィールドの入力条件則でグローバル関数を使用しています。部署が入力されると、このグローバル関数は Departmentテーブルを検索し、入力された値が妥当かどうかを検証します。

このサンプル プログラムでは PB 6.0 の新機能であるデータウィンドウのグループボックスを使用しています。", 0, 1,"","", 1,"関数 - ユーザ定義","日付を操作するユーザ定義関数や PowerScript 関数を使用します。","Date 関数","w_date_functions","2.0","PowerScript 関数 DayNumber、DayName、RelativeDate、DaysAfter を使用します。　ユーザ定義関数 f_check_date は、｢日付｣ と ｢曜日｣ の組み合わせが正しいかどうかを判定します。　f_closest_date関数は、指定された日付に最も近い曜日を判定します。", 0, 0,"","", 1,"関数 - ユーザ定義","PowerBuilder 5.0 では、オブジェクト レベルでの関数の多重定義が可能です。　このプログラムでは、グローバル関数 Replace を使用して、ウィンドウ関数の多重定義の方法を示します。","関数の多重定義","w_global_replace","5.0","グローバル関数 Replaceを 2 つ多重定義し、入力されたパラメータの数に対応した、適切な関数が呼び出されます。　関数呼び出しの構文はウィンドウ上に表示されます。", 0, 0,"","", 1,"関数 - ユーザ定義","ユーザ定義関数 f_Populate_DDLB_from_DB を使用します。　この関数は、データベースから取得した値を、ドロップダウン リストボックスに表示します。　また、動的 SQL を使用します","データベースのデータをドロップダウン リストボックスに表示","w_populate_ddlb_from_db","2.0","ユーザ定義関数 f_Popuate_DDLB_from_DB で動的 SQL を使用すると、特定のカラムやテーブルの重複しない値を、ドロップダウン リストボックスに迅速にロードすることができます。", 0, 0,"","", 0,"グラフ","在庫総数に各商品が占める割合を、パーセンテージで示したグラフです。　在庫数が 31 以上の商品は、1 項目として表示されています。　在庫数が 30 以下の商品は、すべて ｢その他｣ の項目に含まれています。","グラフへの｢その他｣ 項目の追加","w_other_category","4.0","複数の項目をまとめて１つの項目 (このサンプルでは ｢その他｣) を作成する方法を示します。", 0, 0,"","", 1,"グラフ","エンド ユーザはマウスでグラフ上をクリックして、データを制御することができます。","グラフ上の右ボタン クリックの機能","w_graph_drilldown","3.0","ObjectAtPointer 関数を使用して、マウスの右クリック、左ボタンのダブルクリック、左ボタンのクリックが、グラフのどの位置をクリックしているかを判断します。　このウィンドウでは、エンド ユーザを上位レベルから詳細レベルのデータに移動させるテクニックを示します。", 0, 0,"","", 0,"グラフ","年度ごとの歳入を表示するグラフです。　ボタンをクリックすると、四半期ごとの歳入を示すグラフ系列が追加されます。","グラフへのデータ系列の動的な追加","w_graph_dynamic_series","4.0","Modify 関数を使用してグラフ系列の追加 / 削除を行います。", 0, 0,"","", 1,"グラフ","拡張機能を持つ円グラフです。　円グラフの一片をダブル クリックすると、その一片は円グラフから切り離されて表示され、その一片の割合を設定することができます。　円グラフの凡例とテキストには、計算式を使用しています。　グラフのタイトルには、売り上げの合計が計算され表示されます。　このプログラムでは、提示目的をはっきりさせたり、強調するためにグラフを変化させる方法を示します。","拡張機能を持つ円グラフ","w_pie_graph","4.0","円グラフから切り離された一片の中心からの距離の半径に対する割合を、SetDataPieExplode 関数で設定します。　一片の現行の円グラフの中心からの距離の半径に対する割合は、GetDataPieExplode 関数で取得することができます。

ユーザが、グラフの変更状態を見ながら一片の中心からの距離を変更するには、データウィンドウをパラメータとしてポップアップ ウィンドウに渡します。　このポップアップ ウィンドウは、元のデータウィンドウ プロパティを変更します。

凡例、タイトル、ポインタにはすべて計算式を使用します。　これらの式は、[グラフ　オブジェクト] ダイアログボックスの [データ] タブで設定することができます。", 0, 0,"","", 0,"グラフ","ウィンドウには、従業員情報のデータウィンドウと、部署ごとの従業員データを 3 種類のグラフで示したデータウィンドウが表示されています。","グラフと共有データウィンドウ","w_shared_dw_graph","3.0","従業員データは、データベースから一度だけ検索されます。共有データウィンドウというテクニックを使用することによって、(グラフとして表示される) 3 つのデータウィンドウで共通のデータ ソースを使用することができます。主データウィンドウに対する変更内容は、共有のグラフ データウィンドウにも反映されます。グラフ定義のネスト機能は、表示されているデータの前処理に使用されます。給与の円グラフと部署ごとの平均年齢のグラフには退職者は含まれません。これらの関数については、グラフのデータ定義を参照して確認してください。", 0, 0,"","", 1,"グラフ","さまざまなグラフのシートを持つ MDI フレームです。　実行時にグラフのプロパティを変更することによって、グラフの種類、色、間隔、タイトルなどを変更できます。このプログラムでは、2 種類のグラフ オブジェクト (ウィンドウ内のグラフ オブジェクトおよびデータウィンドウ中の埋め込みグラフ) を示します。
","さまざまなグラフのサンプル","w_graph_example_frame","3.0","グラフのプロパティ (色、間隔など) を変更するには、グラフまたはデータウィンドウをPowerObjectParmプロパティを使用してウィンドウに渡します。　シートのイベント スクリプトとレスポンス ウィンドウとの通信は、OpenWithParm 関数を使用して行います。

[年月別の受注情報] シートと [部署別の給与情報] シートは、データウィンドウを検索して数値データを持つカラムを検出し、そのカラムを [グラフに表示するデータ] リストボックスに表示します。

このプログラムでは、一般的な２つのシート (ウィンドウ中のグラフ オブジェクトとデータウィンドウを持つシート、およびデータウィンドウを持つシート) が定義されています。　すべてのレポートは、この２つのシートから継承されています。　子孫オブジェクトでの変更点は、フレームの Open イベントで開くシート名、ウィンドウのタイトル、データウィンドウのオブジェクト名、グラフ プロパティなどです。

フレームは、一度に 1 種類のシートのインスタンスだけを開くように設計されています。　[ファイル] メニューからシートを選択すると、選択したシートが既に開かれている場合はそのシートを一番手前に表示し、開かれていなければそのシートを開きます。
", 0, 0,"","", 1,"継承","このサンプル プログラムでは、カスタムクラス ユーザオブジェクトと継承を使用して、GUIからビジネスルールを分離する方法を示します。","ビジネス クラス","w_employee","6.0","ビジネス クラス オブジェクトは、カスタム クラス ユーザ オブジェクトを使用して作成されています。　このクラス (ユーザ オブジェクト) は、データウィンドウにおける行の検索、更新、挿入、削除をメソッド (ユーザ定義関数) によって処理しています。　このプログラムでは、単純な従業員オブジェクトを表示します。　このオブジェクトに対するビジネス ルールは、ビジネス クラス オブジェクトを継承して実装されています。　従業員オブジェクトに指定したビジネス ルールはすべて、先祖ユーザ定義関数を上書きして定義されています。　先祖の更新ウィンドウは、ビジネス クラス オブジェクトに検索、更新、挿入、および削除の各メッセージを送ります。　先祖の更新ウィンドウを継承する従業員ウィンドウでは、従業員オブジェクトがこれらのメッセージを受け取るように指定するだけです。", 0, 1,"","", 1,"継承","英語ウィンドウを継承して、日本語、フランス語、オランダ語、スペイン語のウィンドウを作成しています。　ウィンドウ関数、スクリプトの拡張、上書きの方法を示します。","複数の言語ベースのアプリケーション","w_multilingual","2.0","フランス語のウィンドウは、wf_total 関数を上書きしています。　オランダ語とスペイン語のウィンドウでは先祖スクリプトを拡張して、合計を計算したあとに短いメッセージを表示させます。", 0, 0,"","", 0,"継承","１つのウィンドウに２つのユーザ オブジェクトが表示されています。一方のユーザ オブジェクトはもう一方のユーザ オブジェクトから継承されています。　先祖ユーザ オブジェクトでは、テキスト スタイルを太字、斜体、下線付きに変更できます。　継承されたユーザ オブジェクトは、先祖オブジェクトのスクリプトを拡張、上書き、あるいは動的に呼び出して、さらに多くの機能を実行することができます。","テキスト プロパティの変更","w_style_uos","2.0","ユーザ オブジェクトの継承と、先祖オブジェクトのスクリプトの拡張、上書き、動的な呼び出しについて説明します。", 0, 0,"","", 1,"継承","さまざまなグラフのシートを持つ MDI フレームです。　実行時にグラフのプロパティを変更することによって、グラフの種類、色、間隔、タイトルなどを変更できます。このプログラムでは、2 種類のグラフ オブジェクト (ウィンドウ内のグラフ オブジェクトおよびデータウィンドウ中の埋め込みグラフ) を示します。
","さまざまなグラフのサンプル","w_graph_example_frame","3.0","グラフのプロパティ (色、間隔など) を変更するには、グラフまたはデータウィンドウをPowerObjectParmプロパティを使用してウィンドウに渡します。　シートのイベント スクリプトとレスポンス ウィンドウとの通信は、OpenWithParm 関数を使用して行います。

[年月別の受注情報] シートと [部署別の給与情報] シートは、データウィンドウを検索して数値データを持つカラムを検出し、そのカラムを [グラフに表示するデータ] リストボックスに表示します。

このプログラムでは、一般的な２つのシート (ウィンドウ中のグラフ オブジェクトとデータウィンドウを持つシート、およびデータウィンドウを持つシート) が定義されています。　すべてのレポートは、この２つのシートから継承されています。　子孫オブジェクトでの変更点は、フレームの Open イベントで開くシート名、ウィンドウのタイトル、データウィンドウのオブジェクト名、グラフ プロパティなどです。

フレームは、一度に 1 種類のシートのインスタンスだけを開くように設計されています。　[ファイル] メニューからシートを選択すると、選択したシートが既に開かれている場合はそのシートを一番手前に表示し、開かれていなければそのシートを開きます。
", 0, 0,"","", 1,"電子メール","メール メッセージから添付されたデータウィンドウを受信し、それを表示します。　この処理は、PowerBuilder に組み込まれた MAPI 関数を使用して実現されます。","MAPI メール -  受信","w_mail_receive","3.0","このサンプル プログラムは、MAPI メール システムを使用し、メールの受信ボックスは PowerBuilderの機能を使用して表示されます。　ユーザは、受信ボックスを閲覧してメール内容を読み込むことができます。　また、[MAPI メール送信] サンプル プログラムから送られたメール メッセージの場合は、メッセージに添付されたデータウィンドウを表示することも可能です。

[MAPI メール送信] サンプル プログラムは、PSR (Powersoftレポート) ファイル形式で、添付ファイルであるデータウィンドウのデータとフォーマットを保存しています。", 0, 0,"macintoshsol2hpuxaix","", 1,"電子メール","データウィンドウにデータを読み込み、データウィンドウ全体 (定義および内容) を、指定した宛先に送信します。　この処理は、PowerBuilder に組み込まれている MAPI 関数を使用して実行されています。","MAPI メール -  送信","w_mail_send","3.0","MAPI 準拠のメール システムを使用してメールを作成し、メール システムに登録されている宛先に送信することができます。　また、このプログラムは、ご使用のメール システムと直接通信します。　データウィンドウは、メールの添付ファイルとして送信されます。", 0, 0,"macintoshsol2hpuxaix","", 1,"MDI","データウィンドウの現行カラムのデータに基づいて、状況依存マイクロヘルプを簡単に表示する方法を示します。","状況依存マイクロヘルプ","w_tag_help_frame","3.0","データウィンドウの各カラムに対するマイクロヘルプは、データウィンドウのタグ リストに保持されています。　このタグ リストには、データウィンドウ ペインタの [編集] メニューからアクセスできます。　データウィンドウの ItemFocusChanged イベントでは、Describe 関数を使用して現行カラムのタグ値を取得します。　次に、SetMicroHelp 関数を使用して、カラムのタグ値を MDI フレーム ウィンドウのマイクロヘルプに設定します。", 0, 0,"","", 1,"MDI","カスタム ユーザ オブジェクトと子孫ウィンドウ間の通信と、カスタム MDI フレームの作成方法を示します。　また、２レベルの継承、先祖イベントのスクリプトに対する拡張や上書き、およびウィンドウと MDI フレーム ウィンドウのメニューとの通信も行います。また、このプログラムでは、メニューの１レベルの継承も行われています。","カスタム MDI フレーム","w_frame_queries","2.0","シート ウィンドウとして、データウィンドウを１つまたは２つ含むウィンドウ (データウィンドウを１つ含むウィンドウの子孫) の子孫ウィンドウを持つカスタム MDI フレームです。　各シートは第１、または第２世代の子孫オブジェクトです。　行選択などの動作は、最上位の先祖で定義されています。　マスター / 詳細処理に関連する動作は、第２レベルの先祖オブジェクトで定義されています。　カスタム ユーザ オブジェクトは、カスタム MDI フレーム上にあり、データウィンドウの操作を行います。", 0, 0,"","", 1,"MDI","データ操作を行うインタフェースとして、Windows のプログラム マネージャのようなインタフェースを提供します。　このプログラムは MDI アプリケーションで、各シート上にはリストビュー コントロールが貼り付けられています。　階層をたどって必要なデータを入手することができます。","データ マネージャ","w_data_manager_frame","5.0","DataStores のデータをリストビュー コントロールに表示します。　また、リストビューと MDI の基本機能の実装方法を示します。", 0, 0,"","", 1,"MDI","OpenUserObjectWithParm 関数を使用して、データウィンドウ コントロールとやり取りするユーザ オブジェクト のコマンドボタンを作成します。　[ユーザ オブジェクト] メニューから必要なボタンを選択しウィンドウ上をクリックすると、コマンド ボタンを作成することができます。　作成したボタンをクリックすると、ボタンが持つ機能が実行されます。","動的ユーザ オブジェクト","w_dynamic_uo_open_uo_frame","3.0","MDI、OpenUserObjectWithParm 関数、継承関係 (メニュー)、カーソルの変更を使用しています。", 0, 0,"","", 1,"MDI","GetFirstSheet および GetNextSheet 関数の呼び出し方を示します。　ユーザ定義関数を使用して、指定したシートがすでに開いているかどうか判断し、開いてるシートのリストを表示します。","GetFirstSheet 関数と GetNextSheet 関数","w_mdi_first_next","4.0","MDI アプリケーションで、現在どのシートが開いているかを表示します。シートのオープン / クローズ時に実行されるスクリプトを追加しているため、シートを記録しておく必要がありません。　GetFirstSheet( ) 関数と GetNextSheet( ) 関数の使い方を示します。　また、いくつかの簡単なユーザ定義関数を使用して、あるタイトルのウィンドウが開いているかどうかを調べたり、開いているすべてのウィンドウを取得したりします。", 0, 0,"","", 1,"MDI","スクリプト ペインタと同じように、ツール バーとメニューを持つ汎用的なメモ帳です。　このメモ帳は、複数の文書を MDI シートとして開くこともできます。　文書は、新規作成することも、既存のテキスト ファイルから開くこともできます。　また、ファイルの保存、削除、印刷も可能です。　標準的なテキスト編集機能 (切り取り、コピー、貼り付けなど) はすべて備えており、オプションとして、現行の行のステータスや時計を表示することができます。","PowerBuilder メモ帳","w_notepad_frame","5.0","メニューは、メニューから起動されるカスタム ユーザ イベントを介して文書 (シート) と通信します。　GetFileOpenName関数および GetFileSaveName 関数を使用して Windows のダイアログボックスを開き、DOS ファイルのオープン、保存、削除を行うことができます。　FileOpen、FileClose、FileRead、FileWrite、FileExistsなどのファイル関数を使用しています。また、マルチライン エディット コントロールの HideSelection プロパティの使用例を示します。このプロパティを使用すると、フォーカスが別のウィンドウに移動した後も、選択 (ハイライト表示) したテキストを選択状態のままにしておくことができます。", 0, 0,"","", 1,"メニュー","ウィンドウのメニューをプログラム的に変更する方法、ポップアップ メニューの使い方、メニューのプロパティの動的な変更方法を示します。","メニュー項目のプロパティ","w_frame_menu_functions","2.0","ChangeMenu 関数は、ウィンドウと関連付けられるメニューを変更するために使用します。　ポップアップ メニューは、RbuttonDown イベント、PopMenu、PointerX、および PointerY 関数を使用して、右クリックされた現行のポインタ位置に表示されます。　メニューのプロパティは、メニュー項目をクリックしていくと、それにつれて変更されます。", 0, 0,"","", 1,"メニュー","1 つのツールバーを複数のツールバーに分割し、エンド ユーザがツールバーを移動したり配置位置を指定したりできるようにする方法を示します。　また、ツールバーの配置位置は保存することができます。","複数のツールバー","w_toolbar_func","5.0","Index プロパティを使用して、メニュー項目をグループ化することができます。　各ツールバーには、それぞれ異なるインデックスが与えられ、ツールバーは、ツールバー エリア内の任意の場所に配置することができます。", 0, 0,"","", 1,"その他","指定した算術演算子で 2 つの 10 進数値を計算し、その結果を異なる精度の 10 進数で表示します。　宣言された変数の精度によって 10 進数値がどのような値になるかを示します。","さまざまな10進数表示","w_decimal_test","2.0","2 つの 10 進数値は、エディットマスクを使用して入力します。　算術演算子はドロップダウン リストボックスから選択します。　ウィンドウからウィンドウ関数を呼び出し、エディットマスクの Modified イベントとドロップダウン リストボックスの SelectionChanged イベントの結果を計算します。", 0, 0,"","", 0,"その他","PowerBuilder のガベージ コレクション機能について示しています。　ガベージ コレクション機能をオン／オフにした多数のユーザオブジェクトを CREATE し、実行前と実行後の使用可能メモリを表示します。","ガベージ コレクション","w_garbage_collect","6.0"," PowerBuilder がシステム起動イベントの実行を完了した時、最後にガベージ コレクションが実行されてからの経過時間と設定されたガベージ コレクションのインターバルとを比較します。　経過時間がガベージ コレクションのインターバルを超えた場合、ガベージ コレクタが実行されます。　デフォルトのインターバルは 500 ミリ秒です。（1/2秒）", 1, 0,null null  1,"その他","PowerBuilder で作成した [DDE クライアント] ウィンドウと [DDE サーバ] ウィンドウを表示します。","DDE クライアントとサーバ","w_dde_client","3.0","PowerBuilder アプリケーションを、DDE クライアントとしてだけでなくサーバとしても機能させる方法を示します。　また、リモート要求やホット リンク要求の送受信方法も実演しています。", 0, 0,"macintoshsol2hpuxaix","", 1,"その他","P-コード とマシーン コードの実行ファイルで、さまざまなパフォーマンス ベンチマークを行うサンプル プログラムです。　ベンチマークの結果を比較するレポートを作成します。　","パフォーマンス ベンチマーク","w_benchmark_ex","5.0","このパフォーマンス ベンチマークは Powerbuilder マシーン コードのパフォーマンスがP-コードより良いことを示しています。

ベンチマーク テスト項目:スクリプトの中に記述するループ、配列のソート、TAK ベンチマーク、関数の呼びしやイベントの起動、変数への値の割り当てのオーバヘッド、ウィンドウ インスタンスの生成、文字列の置換、データストアから／へのデータのコピー", 0, 0,"sol2hpuxaix","", 1,"その他","PowerBuilder の GUI メッセージ機能を使用した、｢楽しい｣ サンプル プログラムです (なかには、イライラされる方もいらっしゃるかもしれません)。","人生の意義","w_meaning","4.0","MouseMove イベントを使用しています。", 0, 0,"","", 0,"その他","このサンプル プログラムは、ウィンドウのサイズよりも長いデータウィンドウ コントロールを持つウィンドウです。　縦スクロールの単位と縦ページ スクロールの単位を変更して、データウィンドウをスクロールできるようにします。","ウィンドウのスクロール","w_window_scroll","3.0","ウィンドウの LinesPerPage プロパティと UnitsPerLine プロパティを変更して、ウィンドウのスクロール量を調整します。", 0, 0,"","", 1,"オブジェクト間通信","データウィンドウの検索処理と印刷処理を、途中でキャンセルする方法を示します。","検索および印刷のキャンセル","w_cancel_retrieval","2.0","データウィンドウの RetrieveStart、RetrieveRow、および RetrieveEnd イベントで、ユーザからの検索要求のキャンセルをモニターします。PrintDataWindow 関数は、[キャンセル] ダイアログボックスの表示 / 非表示を指定するオプション の引数を持ちます。", 0, 0,"","", 1,"オブジェクト間通信","１つのウィンドウで同じユーザ オブジェクトの２つのインスタンスを使用し、ウィンドウの背景色とテキスト色を設定する方法について示します。","色の変更","w_uo_colors","2.0","ユーザ オブジェクトのカスタム ユーザ イベントに特定のウィンドウ スクリプトを記述して、ユーザ オブジェクトとウィンドウで通信する方法を示します。　また、ユーザ定義関数の呼び出し方も示します。", 0, 0,"","", 0,"オブジェクト間通信","マルチプル ドキュメント インタフェース (MDI) のフレーム ウィンドウで、3 つの異なるレポート ウィンドウ (MDI シート) のインスタンスを開きます。　任意のレポート ウィンドウ上に部署名をドラッグすると、その部署のレポートが表示されます。","部署レポート","w_mdi_main","2.0","オブジェクトをあるウィンドウから別のウィンドウにドラッグする方法と、DragDrop イベントで、ドロップしたオブジェクトの種類を入手する方法を示します。　また、ウィンドウ間で情報を渡すために Message オブジェクトを使用しています。", 0, 0,"","", 1,"オブジェクト間通信","従業員のデータベースに追加や変更を行う、単純な従業員管理システムです。　最初のウィンドウでは、すべての部署を検索します。　部署を選択すると、２番目のウィンドウが開き、その部署に所属する従業員が表示されます。　３番目のウィンドウには、従業員の詳細情報が表示され、このデータは変更することができます。","OpenWithParm 関数と CloseWithReturn 関数","w_eis_dept","3.0","このプログラムでは、OpenWithParm 関数と CloseWithReturn 関数を使用して構造体を別のウィンドウに渡す方法を示します。　従業員の詳細情報データウィンドウには、部署とその他の詳細情報を表示するドロップダウン データウィンドウが含まれています。また、さまざまな編集様式と表示書式を使用しています。", 0, 0,"","", 0,"オブジェクト間通信","さまざまなグラフのシートを持つ MDI フレームです。　実行時にグラフのプロパティを変更することによって、グラフの種類、色、間隔、タイトルなどを変更できます。このプログラムでは、2 種類のグラフ オブジェクト (ウィンドウ内のグラフ オブジェクトおよびデータウィンドウ中の埋め込みグラフ) を示します。
","さまざまなグラフのサンプル","w_graph_example_frame","3.0","グラフのプロパティ (色、間隔など) を変更するには、グラフまたはデータウィンドウをPowerObjectParmプロパティを使用してウィンドウに渡します。　シートのイベント スクリプトとレスポンス ウィンドウとの通信は、OpenWithParm 関数を使用して行います。

[年月別の受注情報] シートと [部署別の給与情報] シートは、データウィンドウを検索して数値データを持つカラムを検出し、そのカラムを [グラフに表示するデータ] リストボックスに表示します。

このプログラムでは、一般的な２つのシート (ウィンドウ中のグラフ オブジェクトとデータウィンドウを持つシート、およびデータウィンドウを持つシート) が定義されています。　すべてのレポートは、この２つのシートから継承されています。　子孫オブジェクトでの変更点は、フレームの Open イベントで開くシート名、ウィンドウのタイトル、データウィンドウのオブジェクト名、グラフ プロパティなどです。

フレームは、一度に 1 種類のシートのインスタンスだけを開くように設計されています。　[ファイル] メニューからシートを選択すると、選択したシートが既に開かれている場合はそのシートを一番手前に表示し、開かれていなければそのシートを開きます。
", 0, 0,"","", 1,"OLE","PowerBuilder 5.0 の新機能の 1 つで、データ パイプラインで Blob (Binary Large Object) カラムを使用できるようになりました。　このサンプル プログラムは、Blob カラムを持つ OLE テーブルのコピーを作成します。","Blob カラムを含んだデータ パイプライン","w_pipeline_blob","5.0","データ パイプラインで、Blob カラムを指定する方法を示します。　また、OLE 2.0 オブジェクトをデータウィンドウで表示する方法も示します。", 0, 0,"macintoshsol2hpuxaix","", 1,"OLE","ウィンドウ上で OLE 2.0 コントロールを使用し、OLE をサポートする PowerScript 関数の使用例を示します。","OLE 2.0 コントロール","w_ole_example_frame","4.0","OLE 2.0 コントロールの内容は、実行時に変更することができます。　このプログラムでは、OLE オブジェクトの作成またはロード方法について示します。

オブジェクトは、Blob (バイナリ ラージ オブジェクト) に変換して、Long Binary 型としてデータベースに保存することができます。", 0, 0,"macintoshsol2hpuxaix","", 1,"OLE","マルチラインエディット コントロールを使用して、ユーザが入力したテキストのスペル チェックを行います。　<スペル チェック> ボタンをクリックすると、Excel の [スペル チェック] ダイアログボックスが開き、単語のスペルを修正することができます。　修正は、マルチライン エディットに反映されます。","スペルチェック ウィンドウ","w_spellcheck","4.0","OLE オートメーションを使用して、Excel を内部的な OLE オブジェクトとして起動します。　マルチラインエディットの内容はスプレッド シートのセルにコピーされ、スペル チェックを行います。Excel でのスペル チェックが終了すると、マルチラインエディットに、その修正が反映されます。", 0, 0,"macintoshsol2hpuxaix","", 0,"再帰処理","選択したドライブのすべてのディレクトリを再帰的にツリー表示します。　データウィンドウを使用した方法とバージョン 5.0 から新しく加わったツリービュー コントロールを使用した方法の２種類の方法で、ディレクトリ情報を表示します。　２つの表示の切り替えには、タブ コントロールを使用しています。","ディレクトリ ツリー","w_dir_tree","5.0","再帰関数の引数として、選択されたドライブ名 (A、C など) を設定します。　再帰関数はそのドライブのすべてのディレクトリを探し、各ディレクトリに対して自分自身を呼び出します。　すべてのディレクトリが検出されるまで、この処理は続けられます。

また、バージョン 5.0 から新しく加えられたウィンドウ コントロール - ツリービュー、タブ、ドロップダウン ピクチャ リストボックス - を使用しています。", 0, 0,"","", 1,"再帰処理","｢ハノイの塔｣ というパズルです。　このパズルは再帰アルゴリズムを利用すると簡単に解けますが、それ以外の方法で解くのは困難です。　左の柱から右の柱へ、ルールに従って円盤を移動します。　詳しいルールについては、<ヘルプ> ボタンをクリックして参照してください。","ハノイの塔","w_towers_hanoi","3.0","再帰アルゴリズムとは、関数 (またはサブルーチン) が、その関数 (またはサブルーチン) 自身を呼び出すことをいいます。　関数やサブルーチンが呼び出されるたびに、その繰り返しに対して変数の集合が ｢ローカルに｣ 保持されます。　再帰関数の利点は、アルゴリズムから同じアルゴリズムを繰り返していく複雑なプログラムよりも、1つのアルゴリズムが同じアルゴリズムを呼び出すプログラムのほうが明確で単純という点です。", 0, 0,"","", 1,"SQL - 埋め込み","このプログラムでは、動的 SQL の４つの書式を示しています。　動的 SQL は、SQL 文またはそのパラメータがコンパイル時に指定されていない場合や、PowerBuilder が埋め込み SQL でサポートしていない SQL 文を処理する場合に使用します。","動的 SQL: 4 つの書式","w_dynsql_frame","3.0","動的 SQL の書式１は、入力パラメータを持たず結果集合を返さない SQL 文を実行するために使用します。　書式１は DDL に対して使用します。　このプログラムでは、テーブルの作成、変更、削除を行う DDL を発行します。

動的 SQL の書式２は、入力パラメータを持つ、結果集合を返さない SQL 文の実行に使用します。　このプログラムでは、現行の部署と指定した更新値をもとに、従業員データに対する単純な UPDATE 文を作成します。

動的 SQL の書式３は、コンパイル時に入力パラメータと結果集合カラムが判明していて、結果集合を返す SQL 文を実行するために使用します。　このプログラムでは、特定の部署の従業員名を検索しています。

動的 SQL の書式４は、結果集合を返すが、入力パラメータと結果集合カラムがコンパイル時に指定されていない SQL 文の実行に使用します。　このプログラムでは、エンド ユーザが動的 SQL 文を入力することができます。　動的 SQL 文には DynamicStagingArea が用意されており、動的カーソルが関連付けられています。　DynamicStagingAreaは DynamicDescriptionArea で記述されています。　値は、SetDynamicParm 関数の入力パラメータに割り当てられます。　GetDynamic 関数は、行をフェッチするときの出力パラメータの値を取得するために使用します。", 0, 0,"","", 1,"SQL - 埋め込み","ユーザ定義関数 f_Populate_DDLB_from_DB を使用します。　この関数は、データベースから取得した値を、ドロップダウン リストボックスに表示します。　また、動的 SQL を使用します","データベースのデータをドロップダウン リストボックスに表示","w_populate_ddlb_from_db","2.0","ユーザ定義関数 f_Popuate_DDLB_from_DB で動的 SQL を使用すると、特定のカラムやテーブルの重複しない値を、ドロップダウン リストボックスに迅速にロードすることができます。", 0, 0,"","", 0,"SQL - プロシージャとトリガ","PowerBuilder 5.0 の新機能の 1 つで、ストアド プロシージャを、データ パイプラインの転送元データとして指定できるようになりました。　このサンプル プログラムは、データ パイプラインを使用して、販売受注に関するすべての情報を含むテーブルを作成し、ロードします。","ストアド プロシージャをソースとするデータ パイプライン","w_pipeline_sp","5.0","ストアド プロシージャからデータ パイプラインを作成する方法を示します。", 0, 0,"","desktop", 1,"SQL - プロシージャとトリガ","このサンプル プログラムのすべてのデータウィンドウは、ストアド プロシージャ データ ソースを用いて作成されています。","ストアドプロシージャをソースとするデータウィンドウ","w_stored_proc","4.0","[販売受注] データウィンドウのタイトルには、検索引数でもある商品ID が表示されます。また、このデータウィンドウは、各商品販売受注データの詳細情報を表示するネストティッド データウィンドウを持ちます。　このネスティッド データウィンドウは、黄色の長方形コントロールの Width プロパティに式を指定して、参照している商品ID の行をハイライト表示します。　また、このサンプル プログラムでは、ドロップダウン データウィンドウの明示的な検索方法も示します。", 0, 0,"","desktop", 1,"SQL - プロシージャとトリガ","テーブル間のデータの整合性を維持するために、データベースで定義されている更新トリガをどのように使用するかを示します。　トリガにはさまざまな利点があります。　たとえば、複数のアプリケーションがデータベースに対して同じアクションを行う場合、それをトリガとして定義することによって標準化できることや、アクションが必要な際に自動的に起動するのでスクリプトの記述作業が軽減されることなどが挙げられます。","更新トリガ","w_update_trigger","4.0","トリガは、Department テーブルのDept_head_id カラム (管理者 カラム) が更新されると起動するようにデータベースに定義されています。　Department テーブルに変更が加えられると、トリガはその変更に基づいて Employee テーブルを自動的に更新します。", 0, 0,"","desktop", 1,"SQL - プロシージャとトリガ","データウィンドウのデータの変更時に、ストアド プロシージャを使用してデータベースを更新する方法を示します。","ストアド プロシージャを使用したデータウィンドウの更新","w_sp_update","4.0","Update 関数がデータウィンドウに対して呼び出されると、(そのデータウィンドウの) SQLPreview イベントが、更新する各行に対して一度ずつ起動されます。　SQLPreview イベントでは、GetUpdateStatus 関数と GetItemStatus 関数を使用して、更新中の行、その行が保存されているバッファ、その行のステータス (New!、NewModified!、NotModified!、DataModified! のいずれか) を取り出します。　行のバッファとステータスに基づいて、その行に適切なパラメータとデータが、すべての更新機能を処理するストアド プロシージャに渡されます。　最後にアクション コードを設定して、データウィンドウがその行の SQL 文をスキップするようにします。", 0, 0,"","desktop", 0,"ユーザ オブジェクト","アナログ時計をユーザ オブジェクトで実現しています。　秒針、分針、時針が動き、時刻を表示します。　ユーザ定義関数の呼び出し方、および Sin 関数や Cos 関数を使用して時計の針を動かす方法を示します。","アナログ時計","w_analog_clock","2.0","ウィンドウの Open イベントでユーザ定義関数 uf_start_ticking を呼び出し、「アナログ時計」ユーザ オブジェクトの Timer イベントをセットします。　ユーザ オブジェクトの Timer イベントによって、秒針、分針、時針の位置が計算されます。　ウィンドウの Close イベントでユーザ定義関数 uf_stop_ticking を呼び出し、ユーザ オブジェクトの Timer イベントをリセットします。", 0, 0,"","", 0,"ユーザ オブジェクト","このサンプル プログラムでは、カスタムクラス ユーザオブジェクトと継承を使用して、GUIからビジネスルールを分離する方法を示します。","ビジネス クラス","w_employee","6.0","ビジネス クラス オブジェクトは、カスタム クラス ユーザ オブジェクトを使用して作成されています。　このクラス (ユーザ オブジェクト) は、データウィンドウにおける行の検索、更新、挿入、削除をメソッド (ユーザ定義関数) によって処理しています。　このプログラムでは、単純な従業員オブジェクトを表示します。　このオブジェクトに対するビジネス ルールは、ビジネス クラス オブジェクトを継承して実装されています。　従業員オブジェクトに指定したビジネス ルールはすべて、先祖ユーザ定義関数を上書きして定義されています。　先祖の更新ウィンドウは、ビジネス クラス オブジェクトに検索、更新、挿入、および削除の各メッセージを送ります。　先祖の更新ウィンドウを継承する従業員ウィンドウでは、従業員オブジェクトがこれらのメッセージを受け取るように指定するだけです。", 0, 1,"","", 1,"ユーザ オブジェクト","１つのウィンドウで同じユーザ オブジェクトの２つのインスタンスを使用し、ウィンドウの背景色とテキスト色を設定する方法について示します。","色の変更","w_uo_colors","2.0","ユーザ オブジェクトのカスタム ユーザ イベントに特定のウィンドウ スクリプトを記述して、ユーザ オブジェクトとウィンドウで通信する方法を示します。　また、ユーザ定義関数の呼び出し方も示します。", 0, 0,"","", 0,"ユーザ オブジェクト","カスタム ユーザ オブジェクトと子孫ウィンドウ間の通信と、カスタム MDI フレームの作成方法を示します。　また、２レベルの継承、先祖イベントのスクリプトに対する拡張や上書き、およびウィンドウと MDI フレーム ウィンドウのメニューとの通信も行います。また、このプログラムでは、メニューの１レベルの継承も行われています。","カスタム MDI フレーム","w_frame_queries","2.0","シート ウィンドウとして、データウィンドウを１つまたは２つ含むウィンドウ (データウィンドウを１つ含むウィンドウの子孫) の子孫ウィンドウを持つカスタム MDI フレームです。　各シートは第１、または第２世代の子孫オブジェクトです。　行選択などの動作は、最上位の先祖で定義されています。　マスター / 詳細処理に関連する動作は、第２レベルの先祖オブジェクトで定義されています。　カスタム ユーザ オブジェクトは、カスタム MDI フレーム上にあり、データウィンドウの操作を行います。", 0, 0,"","", 1,"ユーザ オブジェクト","日付フィールドは、ドロップダウン リストボックスのユーザ オブジェクトです。　このフィールドをドロップダウンすると、カレンダーのイメージが表示されます。　このユーザ オブジェクトは、英国 Admiral Software 社の Mike Ball 氏によって提供されました。","ドロップ ダウン カレンダー","w_calendar","3.0","ユーザ定義関数を呼び出しています。", 0, 0,"","", 0,"ユーザ オブジェクト","OpenUserObjectWithParm 関数を使用して、データウィンドウ コントロールとやり取りするユーザ オブジェクト のコマンドボタンを作成します。　[ユーザ オブジェクト] メニューから必要なボタンを選択しウィンドウ上をクリックすると、コマンド ボタンを作成することができます。　作成したボタンをクリックすると、ボタンが持つ機能が実行されます。","動的ユーザ オブジェクト","w_dynamic_uo_open_uo_frame","3.0","MDI、OpenUserObjectWithParm 関数、継承関係 (メニュー)、カーソルの変更を使用しています。", 0, 0,"","", 1,"ユーザ オブジェクト","PowerBuilder のロゴがジグソー パズルになっています。","PowerPuzzle","w_puzzle","5.0","標準ユーザ オブジェクトとドラッグ アンド ドロップ機能の使用方法を示します。", 0, 0,"","", 1,"ユーザ オブジェクト","ユーザに項目を選択させる基本的な選択リストです。　ユーザ オブジェクトは、文字が入力されるたびに、入力された文字列に最も近い項目をリストの中から選択します。","Quick Select 検索","w_select_from_list","2.0","選択されたテーブルに応じて、ユーザ オブジェクトに SQL 文 が渡されます。　次に、SyntaxFromSQL 関数が呼び出され、引数として指定された SELECT 文に基づいてデータウィンドウが動的に作成されます。　データウィンドウにデータが検索されたあとは、シングルラインエディットの enter_pressed イベントで Find 関数を使用し、入力された文字列に最も近い行を選択します。", 0, 0,"","", 0,"ユーザ オブジェクト","データウィンドウ ペインタの Quick Select オプションに基づくウィンドウを使用する MDI アプリケーションです。　作成したデータウィンドウは、[ファイル] - [データウィンドウの保存] を使用するとPowerBuilder ライブラリに保存できます。","実行時のデータウィンドウ ペインタ","w_mdi_quick_select","3.0","This example uses the SyntaxFromSQL function to dynamically build a DataWindow from an SQL Statement.  Once the DataWindow has been created, the Describe( ) function is used to display some of the attribute values of columns in the DataWindow.  The Modify( ) function is used to change the values of these attributes.  The Save Dialog uses the DirList( ) function to display the list of PBLs.  The LibraryImport( ) function is used to save the DataWindow.", 0, 0,"","", 1,"ユーザ オブジェクト","以下のようなユーザ オブジェクトの例を示します。:  
(1) 日付が金曜日かどうかをチェックするシングルラインエディット。
(2) 数値しか入力できないシングルラインエディット。
(3) 上書きモードで文字を入力させるシングルラインエディット。
(4) 指定した範囲内の数値しか入力できないシングルラインエディット。
(5) 進行状況を表示するボックス","ユーザ オブジェクトのサンプル","w_uo_sampler","3.0","ユーザ オブジェクトを使用して、ウィンドウでのスクリプトの記述を減らす方法を示します。　GetData 関数を使用して、[金曜日の日付のみ] ユーザ オブジェクトの日付型エディット マスクから日付を取得します。", 0, 0,"","", 1,"ユーザ オブジェクト","データウィンドウに適合する、構造体または OLE オートメーション カスタム クラスNVO を作成するユーティリティです。　データウィンドウのドット(.)表記による参照を使用して、データウィンドウ間でのデータのコピーを行うことができます。","データウィンドウと構造体ユーティリティ","w_dwtostr","5.0","構造体または OLE オートメーション カスタム クラス NVO のエクスポート構文を生成し、ファイルに保存することができます。　このファイルをインポートして、オブジェクトを作成することができます。", 0, 0,null null  1,"ウィンドウ コントロール","Windows 95 のエクスプローラのようなインタフェースで、データ操作を行います。　２つのコントロール (ツリービューとリストビュー) をリンクして使用します。","データ エクスプローラ","w_data_explorer","5.0","DataStores のデータを、ツリービューおよびリストビュー コントロールに表示します。　また、ツリービューとリストビュー コントロールの標準的なイベントを使用して、この２つのコントロールをリンクする方法を示します。", 0, 0,"","", 1,"ウィンドウ コントロール","データ操作を行うインタフェースとして、Windows のプログラム マネージャのようなインタフェースを提供します。　このプログラムは MDI アプリケーションで、各シート上にはリストビュー コントロールが貼り付けられています。　階層をたどって必要なデータを入手することができます。","データ マネージャ","w_data_manager_frame","5.0","DataStores のデータをリストビュー コントロールに表示します。　また、リストビューと MDI の基本機能の実装方法を示します。", 0, 0,"","", 1,"ウィンドウ コントロール","選択したドライブのすべてのディレクトリを再帰的にツリー表示します。　データウィンドウを使用した方法とバージョン 5.0 から新しく加わったツリービュー コントロールを使用した方法の２種類の方法で、ディレクトリ情報を表示します。　２つの表示の切り替えには、タブ コントロールを使用しています。","ディレクトリ ツリー","w_dir_tree","5.0","再帰関数の引数として、選択されたドライブ名 (A、C など) を設定します。　再帰関数はそのドライブのすべてのディレクトリを探し、各ディレクトリに対して自分自身を呼び出します。　すべてのディレクトリが検出されるまで、この処理は続けられます。

また、バージョン 5.0 から新しく加えられたウィンドウ コントロール - ツリービュー、タブ、ドロップダウン ピクチャ リストボックス - を使用しています。", 0, 0,"","", 1,"ウィンドウ コントロール","スクロール プロパティによって、マルチラインエディット コントロールのスクロールがどのように変わるかを示します。　HScrollBar、VScrollBar、AutoHScroll、AutoVScroll の 4 種類のプロパティが利用できます。","マルチラインエディットの自動スクロール","w_mle_scroll","3.0","マルチラインエディット コントロールで、各スクロール プロパティの違いを示します。", 0, 0,"","", 0,"ウィンドウ コントロール","ウィンドウ上で OLE 2.0 コントロールを使用し、OLE をサポートする PowerScript 関数の使用例を示します。","OLE 2.0 コントロール","w_ole_example_frame","4.0","OLE 2.0 コントロールの内容は、実行時に変更することができます。　このプログラムでは、OLE オブジェクトの作成またはロード方法について示します。

オブジェクトは、Blob (バイナリ ラージ オブジェクト) に変換して、Long Binary 型としてデータベースに保存することができます。", 0, 0,"macintoshsol2hpuxaix","", 1,"ウィンドウ コントロール","選択されたディレクトリのビットマップ ファイルとアイコン ファイルをブラウズします。　ビットマップ ファイルのピクチャを拡大したり、アイコン ファイルを大きいアイコン/小さいアイコンで表示することができます。　PowerBuilder をインストールすると、Art Gallery ディレクトリにインストールされます。","ピクチャリストボックス ピクチャ ブラウザ","w_plb","5.0","このサンプル プログラムはピクチャリストボックスの使い方を示しています。　アイコンの表示にリストビュー コントロールを使用しています。", 0, 0,"","", 1,"ウィンドウ コントロール","水族館です。","アニメーション - 水族館","w_fish","5.0","Timer 関数と Draw 関数を使用して魚を動かします。", 0, 0,"","", 0,"ウィンドウ コントロール","Windows 95 スタイルのレジストリ エディタです。PowerBuilder 5.0 のツリー ビュー / リスト ビュー コントロールとレジストリ関数を使用して、レジストリの表示と更新を行います。

Windows 95 または Windows NT をご使用の場合は、このサンプルのコンフィグレーション情報は、example.ini ではなく、レジスgリに格納されています。このサンプル プログラムの起動時に、コンフィグレーション情報を入手するレジストリは、重要なシステム設定情報を含むので、このサンプル プログラムで行う変更は、Code Examples の下位情報だけに留めることを強くお勧めします。レジストリの更新には十分お気をつけください。","レジストリ エディタ","w_regedit","5.0","このサンプル プログラムでは、PowerBuilder 5.0 のレジストリ関数 (RegistyGet、RegistySet、RegistyDelete、RegistyKeys、RegistyValues) を使用します。

また、ツリービュー コントロールの基本的な使用方法を示します。　ツリーの第 1 レベルは、ウィンドウの Open イベントで追加されます。　それ以降のレベルは、必要な時点で追加されます。　スクリプトは、ツリービューの ItemPopulate イベントに記述されています。　ItemPopulate イベントは、ツリーの各項目に対して 1 度起動されます (つまり、その項目が初めて展開されたときに起動されます)。　現行の項目への絶対パスを判定するために、再帰が使用されています。

このサンプル プログラムは、ツリー ビューとリスト ビュー コントロールを組み合わせて、Windows 95 のエクスプローラに似たインタフェースを作成しています。", 0, 0,"macintoshsol2hpuxaix","", 1,"ウィンドウ コントロール","ウィンドウのコントロール配列を調べて、ウィンドウのサイズ変更時にウィンドウ上のすべてのコントロールのサイズも同時に変更する方法を示します。","ウィンドウ上のコントロールのサイズ変更","w_scale","3.0","TypeOf 関数を使用して、コントロール配列の各コントロールの種類を判定し、次にコントロールのサイズとそのプロパティを変更します。　各コントロールの元のサイズは、ウィンドウの Open イベントで記録されており、Resized イベントでコントロールのサイズをウィンドウのサイズに合わせるために使用されます。", 0, 0,"","", 1,"ウィンドウ コントロール","このサンプル プログラム RichPad は、簡単なワード プロセッサーです。　ワード プロセッサーの基本的な機能をすべて備えています。","RichPad RTE コントロール","w_rte","5.0","リッチテキスト コントロールの使用方法を示します。", 0, 0,"","", 1,"ウィンドウ コントロール","リストビュー コントロールの実用的な使用方法を示します。　リストビューに表示されている製品をドラッグ アンド ドロップして商品の注文情報を作成することができます。","受注データのリストビュー","w_add_sales_order","5.0","データストア オブジェクトのデータをリストビュー コントロールに表示します。　また、ドラッグ アンド ドロップ機能と、リストビューにおけるマウスの右ボタン サポートの実装方法を示しています。", 0, 0,"","", 1,"ウィンドウ コントロール","データウィンドウには使用頻度の高い基本的な従業員情報を表示し、タブ ページのデータウィンドウには、使用頻度の低い従業員詳細情報と住所情報を表示します。","データウィンドウ バッファの共有","w_empl_dw_share_buffers","6.0","ShareData 関数を使用して、3 つの更新可能なデータウィンドウで 1 つのデータ ソースを共有します。　メインのデータウィンドウで行った検索が他の 2 つのデータウィンドウに反映され、他の 2 つのデータウィンドウで行った変更は、メインのデータウィンドウに反映されます。

頻繁に使用しない選択肢やデータは、ウィンドウが煩雑にならないようにタブ コントロールを使用しています。

このサンプル プログラムでは PB 6.0 の新機能であるデータウィンドウのグループボックスを使用しています。
", 0, 1,"","", 1,"ウィンドウ コントロール","PowerBuilder 5.0 のタブ コントロールを使用して、姓のよみがなの最初の各文字でソートして 50 音順にタブ ページを表示します。　以下の２つの方法でこの処理を行っています。

単一データウィンドウを使用し、タブ コントロールのタブ ページを使用してデータウィンドウをフィルタします。

ユーザ オブジェクトを使用し、データウィンドウをタブ コントロールのタブ ページとして表示します。　オブジェクトが表示されるときにデータを検索します。","タブ コントロールを使用した電話帳","w_phone_dir","5.0","１番目の方法の場合、データウィンドウはタブ コントロールの一部ではありません。　データウィンドウはタブ コントロール上に配置されています。　データウィンドウは、ウィンドウが開かれたときに検索され、すべての顧客情報を持ちます。　次に、データウィンドウはタブ コントロールの SelectionChanged イベントでフィルタされます。

２番目の方法では、ユーザ オブジェクト上のデータウィンドウは、検索引数を持ち、この検索引数は、姓のよみがなが特定の文字で始まる顧客の情報だけを検索します。　そのため、データは必要となるまで検索されません。　２番目のタブ コントロール オブジェクトも、~"現行タブ上のコントロールのみ生成~" プロパティを使用し、各ページのオブジェクトは、必要となるまで作成されません。", 0, 0,"","", 1,"ウィンドウ コントロール","ツリービュー コントロールでデータ ナビゲーションを行い、データウィンドウでデータを更新します。","ツリービューとデータウィンドウのリンク","w_tv_dw_link","5.0","データストアのデータを、ツリービュー コントロールに表示し、ツリービューのレベルをデータウィンドウにリンクします。", 0, 0,"","", 1,"ウィンドウ コントロール","PowerBuilder の新しいコントロールを紹介します。","プログレスバー コントロール","w_progressbars","7.0","水平/垂直プログレスバーとそのプロパティを使用しています。", 1, 0,null null  0,"ウィンドウ コントロール","PowerBuilder の新しいコントロールを紹介します。","トラックバー コントロール","w_trackbars","7.0","水平/垂直トラックバーとそのプロパティを使用しています。", 1, 0,null null  0,"ウィンドウ コントロール","PowerBuilder の新しいコントロールを紹介します。","ハイパーリンク コントロール","w_hyperlinks","7.0","スタティック テキストとピクチャのハイパーリンクを使用しています。", 1, 0,null null  0,"ウィンドウ コントロール","ツリービュー上の従業員をドラッグ アンド ドロップで、別の部署に移動することができます。","ツリービュー上のドラッグ アンド ドロップ","w_employee_xfer","5.0","ツリービューの項目をドラッグして、ツリービュー コントロールを更新する方法を示します。", 0, 0,"","", 1,"ウィンドウ コントロール","ウィンドウを 3 分割します。　エンドユーザは、パネルの間のバーをドラッグして、パネルのサイズを変更することができます。","ウィンドウ上のパネル","w_size_panels","4.0","バーには、スタティック テキスト オブジェクトを使用しています。　また、MouseMove イベントおよび MouseDown イベントを使用して、各パネルのサイズを変更します。", 0, 0,"","", 0,null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null ) 
text(band=header alignment="2" text="ウィンドウ" border="0" color="0" x="1160" y="7" height="43" width="872" html.valueishtml="0"  name=examples_window_t visible="1"  font.face="ＭＳ ゴシック" font.height="-9" font.weight="700"  font.family="0" font.pitch="2" font.charset="128" background.mode="1" background.color="536870912" background.transparency="0" background.gradient.color="8421504" background.gradient.transparency="0" background.gradient.angle="0" background.brushmode="0" background.gradient.repetition.mode="0" background.gradient.repetition.count="0" background.gradient.repetition.length="100" background.gradient.focus="0" background.gradient.scale="100" background.gradient.spread="100" tooltip.backcolor="134217752" tooltip.delay.initial="0" tooltip.delay.visible="32000" tooltip.enabled="0" tooltip.hasclosebutton="0" tooltip.icon="0" tooltip.isbubble="0" tooltip.maxwidth="0" tooltip.textcolor="134217751" tooltip.transparency="0" transparency="0" )
text(band=header alignment="2" text="バージョン" border="0" color="0" x="2040" y="7" height="43" width="436" html.valueishtml="0"  name=examples_version_t visible="1"  font.face="ＭＳ ゴシック" font.height="-9" font.weight="700"  font.family="0" font.pitch="2" font.charset="128" background.mode="1" background.color="536870912" background.transparency="0" background.gradient.color="8421504" background.gradient.transparency="0" background.gradient.angle="0" background.brushmode="0" background.gradient.repetition.mode="0" background.gradient.repetition.count="0" background.gradient.repetition.length="100" background.gradient.focus="0" background.gradient.scale="100" background.gradient.spread="100" tooltip.backcolor="134217752" tooltip.delay.initial="0" tooltip.delay.visible="32000" tooltip.enabled="0" tooltip.hasclosebutton="0" tooltip.icon="0" tooltip.isbubble="0" tooltip.maxwidth="0" tooltip.textcolor="134217751" tooltip.transparency="0" transparency="0" )
text(band=header alignment="2" text="技術情報" border="0" color="0" x="2484" y="7" height="53" width="1752" html.valueishtml="0"  name=examples_technique_t visible="1"  font.face="ＭＳ ゴシック" font.height="-9" font.weight="700"  font.family="0" font.pitch="2" font.charset="128" background.mode="1" background.color="536870912" background.transparency="0" background.gradient.color="8421504" background.gradient.transparency="0" background.gradient.angle="0" background.brushmode="0" background.gradient.repetition.mode="0" background.gradient.repetition.count="0" background.gradient.repetition.length="100" background.gradient.focus="0" background.gradient.scale="100" background.gradient.spread="100" tooltip.backcolor="134217752" tooltip.delay.initial="0" tooltip.delay.visible="32000" tooltip.enabled="0" tooltip.hasclosebutton="0" tooltip.icon="0" tooltip.isbubble="0" tooltip.maxwidth="0" tooltip.textcolor="134217751" tooltip.transparency="0" transparency="0" )
text(band=header alignment="2" text="追加" border="0" color="0" x="4244" y="7" height="53" width="216" html.valueishtml="0"  name=examples_new_t visible="1"  font.face="ＭＳ ゴシック" font.height="-9" font.weight="700"  font.family="0" font.pitch="2" font.charset="128" background.mode="1" background.color="536870912" background.transparency="0" background.gradient.color="8421504" background.gradient.transparency="0" background.gradient.angle="0" background.brushmode="0" background.gradient.repetition.mode="0" background.gradient.repetition.count="0" background.gradient.repetition.length="100" background.gradient.focus="0" background.gradient.scale="100" background.gradient.spread="100" tooltip.backcolor="134217752" tooltip.delay.initial="0" tooltip.delay.visible="32000" tooltip.enabled="0" tooltip.hasclosebutton="0" tooltip.icon="0" tooltip.isbubble="0" tooltip.maxwidth="0" tooltip.textcolor="134217751" tooltip.transparency="0" transparency="0" )
text(band=header alignment="2" text="拡張" border="0" color="0" x="4468" y="7" height="50" width="292" html.valueishtml="0"  name=examples_enhanced_t visible="1"  font.face="ＭＳ ゴシック" font.height="-9" font.weight="700"  font.family="0" font.pitch="2" font.charset="128" background.mode="1" background.color="536870912" background.transparency="0" background.gradient.color="8421504" background.gradient.transparency="0" background.gradient.angle="0" background.brushmode="0" background.gradient.repetition.mode="0" background.gradient.repetition.count="0" background.gradient.repetition.length="100" background.gradient.focus="0" background.gradient.scale="100" background.gradient.spread="100" tooltip.backcolor="134217752" tooltip.delay.initial="0" tooltip.delay.visible="32000" tooltip.enabled="0" tooltip.hasclosebutton="0" tooltip.icon="0" tooltip.isbubble="0" tooltip.maxwidth="0" tooltip.textcolor="134217751" tooltip.transparency="0" transparency="0" )
text(band=header alignment="2" text="プラットフォーム" border="0" color="0" x="4768" y="7" height="53" width="932" html.valueishtml="0"  name=examples_ostype_t visible="1"  font.face="ＭＳ ゴシック" font.height="-9" font.weight="700"  font.family="0" font.pitch="2" font.charset="128" background.mode="1" background.color="536870912" background.transparency="0" background.gradient.color="8421504" background.gradient.transparency="0" background.gradient.angle="0" background.brushmode="0" background.gradient.repetition.mode="0" background.gradient.repetition.count="0" background.gradient.repetition.length="100" background.gradient.focus="0" background.gradient.scale="100" background.gradient.spread="100" tooltip.backcolor="134217752" tooltip.delay.initial="0" tooltip.delay.visible="32000" tooltip.enabled="0" tooltip.hasclosebutton="0" tooltip.icon="0" tooltip.isbubble="0" tooltip.maxwidth="0" tooltip.textcolor="134217751" tooltip.transparency="0" transparency="0" )
text(band=header alignment="2" text="エディション" border="0" color="0" x="5708" y="7" height="53" width="408" html.valueishtml="0"  name=examples_pbtype_t visible="1"  font.face="ＭＳ ゴシック" font.height="-9" font.weight="700"  font.family="0" font.pitch="2" font.charset="128" background.mode="1" background.color="536870912" background.transparency="0" background.gradient.color="8421504" background.gradient.transparency="0" background.gradient.angle="0" background.brushmode="0" background.gradient.repetition.mode="0" background.gradient.repetition.count="0" background.gradient.repetition.length="100" background.gradient.focus="0" background.gradient.scale="100" background.gradient.spread="100" tooltip.backcolor="134217752" tooltip.delay.initial="0" tooltip.delay.visible="32000" tooltip.enabled="0" tooltip.hasclosebutton="0" tooltip.icon="0" tooltip.isbubble="0" tooltip.maxwidth="0" tooltip.textcolor="134217751" tooltip.transparency="0" transparency="0" )
text(band=header alignment="2" text="ヘルプ" border="0" color="0" x="6124" y="7" height="53" width="404" html.valueishtml="0"  name=examples_exhelp_t visible="1"  font.face="ＭＳ ゴシック" font.height="-9" font.weight="700"  font.family="0" font.pitch="2" font.charset="128" background.mode="1" background.color="536870912" background.transparency="0" background.gradient.color="8421504" background.gradient.transparency="0" background.gradient.angle="0" background.brushmode="0" background.gradient.repetition.mode="0" background.gradient.repetition.count="0" background.gradient.repetition.length="100" background.gradient.focus="0" background.gradient.scale="100" background.gradient.spread="100" tooltip.backcolor="134217752" tooltip.delay.initial="0" tooltip.delay.visible="32000" tooltip.enabled="0" tooltip.hasclosebutton="0" tooltip.icon="0" tooltip.isbubble="0" tooltip.maxwidth="0" tooltip.textcolor="134217751" tooltip.transparency="0" transparency="0" )
text(band=header alignment="2" text="タイトル" border="0" color="0" x="672" y="7" height="43" width="480" html.valueishtml="0"  name=examples_title_t visible="1"  font.face="ＭＳ ゴシック" font.height="-9" font.weight="700"  font.family="0" font.pitch="2" font.charset="128" background.mode="1" background.color="536870912" background.transparency="0" background.gradient.color="8421504" background.gradient.transparency="0" background.gradient.angle="0" background.brushmode="0" background.gradient.repetition.mode="0" background.gradient.repetition.count="0" background.gradient.repetition.length="100" background.gradient.focus="0" background.gradient.scale="100" background.gradient.spread="100" tooltip.backcolor="134217752" tooltip.delay.initial="0" tooltip.delay.visible="32000" tooltip.enabled="0" tooltip.hasclosebutton="0" tooltip.icon="0" tooltip.isbubble="0" tooltip.maxwidth="0" tooltip.textcolor="134217751" tooltip.transparency="0" transparency="0" )
text(band=header alignment="2" text="グループ" border="0" color="0" x="8" y="7" height="43" width="644" html.valueishtml="0"  name=examples_description_t visible="1"  font.face="ＭＳ ゴシック" font.height="-9" font.weight="700"  font.family="0" font.pitch="2" font.charset="128" background.mode="1" background.color="536870912" background.transparency="0" background.gradient.color="8421504" background.gradient.transparency="0" background.gradient.angle="0" background.brushmode="0" background.gradient.repetition.mode="0" background.gradient.repetition.count="0" background.gradient.repetition.length="100" background.gradient.focus="0" background.gradient.scale="100" background.gradient.spread="100" tooltip.backcolor="134217752" tooltip.delay.initial="0" tooltip.delay.visible="32000" tooltip.enabled="0" tooltip.hasclosebutton="0" tooltip.icon="0" tooltip.isbubble="0" tooltip.maxwidth="0" tooltip.textcolor="134217751" tooltip.transparency="0" transparency="0" )
column(band=detail id=1 alignment="0" tabsequence=32766 border="0" color="0" x="8" y="7" height="64" width="644" format="[general]" html.valueishtml="0"  name=group_id  tag="Code example topic" visible="1" edit.limit=40 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="ＭＳ ゴシック" font.height="-9" font.weight="400"  font.family="0" font.pitch="2" font.charset="128" background.mode="1" background.color="536870912" background.transparency="0" background.gradient.color="8421504" background.gradient.transparency="0" background.gradient.angle="0" background.brushmode="0" background.gradient.repetition.mode="0" background.gradient.repetition.count="0" background.gradient.repetition.length="100" background.gradient.focus="0" background.gradient.scale="100" background.gradient.spread="100" tooltip.backcolor="134217752" tooltip.delay.initial="0" tooltip.delay.visible="32000" tooltip.enabled="0" tooltip.hasclosebutton="0" tooltip.icon="0" tooltip.isbubble="0" tooltip.maxwidth="0" tooltip.textcolor="134217751" tooltip.transparency="0" transparency="0" )
column(band=detail id=2 alignment="0" tabsequence=32766 border="0" color="0" x="660" y="7" height="64" width="4" format="[general]" html.valueishtml="0"  name=description  tag="A summary of what the code example does" visible="1" edit.limit=32000 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="ＭＳ ゴシック" font.height="-9" font.weight="400"  font.family="0" font.pitch="2" font.charset="128" background.mode="1" background.color="536870912" background.transparency="0" background.gradient.color="8421504" background.gradient.transparency="0" background.gradient.angle="0" background.brushmode="0" background.gradient.repetition.mode="0" background.gradient.repetition.count="0" background.gradient.repetition.length="100" background.gradient.focus="0" background.gradient.scale="100" background.gradient.spread="100" tooltip.backcolor="134217752" tooltip.delay.initial="0" tooltip.delay.visible="32000" tooltip.enabled="0" tooltip.hasclosebutton="0" tooltip.icon="0" tooltip.isbubble="0" tooltip.maxwidth="0" tooltip.textcolor="134217751" tooltip.transparency="0" transparency="0" )
column(band=detail id=3 alignment="0" tabsequence=32766 border="0" color="0" x="672" y="7" height="64" width="480" format="[general]" html.valueishtml="0"  name=title  tag="Title of the example" visible="1" edit.limit=60 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="ＭＳ ゴシック" font.height="-9" font.weight="400"  font.family="0" font.pitch="2" font.charset="128" background.mode="1" background.color="536870912" background.transparency="0" background.gradient.color="8421504" background.gradient.transparency="0" background.gradient.angle="0" background.brushmode="0" background.gradient.repetition.mode="0" background.gradient.repetition.count="0" background.gradient.repetition.length="100" background.gradient.focus="0" background.gradient.scale="100" background.gradient.spread="100" tooltip.backcolor="134217752" tooltip.delay.initial="0" tooltip.delay.visible="32000" tooltip.enabled="0" tooltip.hasclosebutton="0" tooltip.icon="0" tooltip.isbubble="0" tooltip.maxwidth="0" tooltip.textcolor="134217751" tooltip.transparency="0" transparency="0" )
column(band=detail id=4 alignment="0" tabsequence=32766 border="0" color="0" x="1160" y="7" height="64" width="872" format="[general]" html.valueishtml="0"  name=window  tag="Window that is opened when the example runs" visible="1" edit.limit=40 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="ＭＳ ゴシック" font.height="-9" font.weight="400"  font.family="0" font.pitch="2" font.charset="128" background.mode="1" background.color="536870912" background.transparency="0" background.gradient.color="8421504" background.gradient.transparency="0" background.gradient.angle="0" background.brushmode="0" background.gradient.repetition.mode="0" background.gradient.repetition.count="0" background.gradient.repetition.length="100" background.gradient.focus="0" background.gradient.scale="100" background.gradient.spread="100" tooltip.backcolor="134217752" tooltip.delay.initial="0" tooltip.delay.visible="32000" tooltip.enabled="0" tooltip.hasclosebutton="0" tooltip.icon="0" tooltip.isbubble="0" tooltip.maxwidth="0" tooltip.textcolor="134217751" tooltip.transparency="0" transparency="0" )
column(band=detail id=5 alignment="0" tabsequence=32766 border="0" color="0" x="2040" y="7" height="64" width="436" format="[general]" html.valueishtml="0"  name=version  tag="Version of PowerBuilder that the example pertains to" visible="1" edit.limit=5 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="ＭＳ ゴシック" font.height="-9" font.weight="400"  font.family="0" font.pitch="2" font.charset="128" background.mode="1" background.color="536870912" background.transparency="0" background.gradient.color="8421504" background.gradient.transparency="0" background.gradient.angle="0" background.brushmode="0" background.gradient.repetition.mode="0" background.gradient.repetition.count="0" background.gradient.repetition.length="100" background.gradient.focus="0" background.gradient.scale="100" background.gradient.spread="100" tooltip.backcolor="134217752" tooltip.delay.initial="0" tooltip.delay.visible="32000" tooltip.enabled="0" tooltip.hasclosebutton="0" tooltip.icon="0" tooltip.isbubble="0" tooltip.maxwidth="0" tooltip.textcolor="134217751" tooltip.transparency="0" transparency="0" )
column(band=detail id=6 alignment="0" tabsequence=32766 border="0" color="0" x="2484" y="7" height="64" width="1752" format="[general]" html.valueishtml="0"  name=technique  tag="A technical summary of what the code example is showing" visible="1" edit.limit=32000 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="ＭＳ ゴシック" font.height="-9" font.weight="400"  font.family="0" font.pitch="2" font.charset="128" background.mode="1" background.color="536870912" background.transparency="0" background.gradient.color="8421504" background.gradient.transparency="0" background.gradient.angle="0" background.brushmode="0" background.gradient.repetition.mode="0" background.gradient.repetition.count="0" background.gradient.repetition.length="100" background.gradient.focus="0" background.gradient.scale="100" background.gradient.spread="100" tooltip.backcolor="134217752" tooltip.delay.initial="0" tooltip.delay.visible="32000" tooltip.enabled="0" tooltip.hasclosebutton="0" tooltip.icon="0" tooltip.isbubble="0" tooltip.maxwidth="0" tooltip.textcolor="134217751" tooltip.transparency="0" transparency="0" )
column(band=detail id=7 alignment="0" tabsequence=32766 border="0" color="0" x="4244" y="7" height="64" width="216" format="[general]" html.valueishtml="0"  name=new  tag="Determines if the example is new for the current release of PowerBuilder" visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="ＭＳ ゴシック" font.height="-9" font.weight="400"  font.family="0" font.pitch="2" font.charset="128" background.mode="1" background.color="536870912" background.transparency="0" background.gradient.color="8421504" background.gradient.transparency="0" background.gradient.angle="0" background.brushmode="0" background.gradient.repetition.mode="0" background.gradient.repetition.count="0" background.gradient.repetition.length="100" background.gradient.focus="0" background.gradient.scale="100" background.gradient.spread="100" tooltip.backcolor="134217752" tooltip.delay.initial="0" tooltip.delay.visible="32000" tooltip.enabled="0" tooltip.hasclosebutton="0" tooltip.icon="0" tooltip.isbubble="0" tooltip.maxwidth="0" tooltip.textcolor="134217751" tooltip.transparency="0" transparency="0" )
column(band=detail id=8 alignment="0" tabsequence=32766 border="0" color="0" x="4468" y="7" height="64" width="292" format="[general]" html.valueishtml="0"  name=enhanced  tag="Determines if the code example has been changed, or enhanced, for the current release" visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="ＭＳ ゴシック" font.height="-9" font.weight="400"  font.family="0" font.pitch="2" font.charset="128" background.mode="1" background.color="536870912" background.transparency="0" background.gradient.color="8421504" background.gradient.transparency="0" background.gradient.angle="0" background.brushmode="0" background.gradient.repetition.mode="0" background.gradient.repetition.count="0" background.gradient.repetition.length="100" background.gradient.focus="0" background.gradient.scale="100" background.gradient.spread="100" tooltip.backcolor="134217752" tooltip.delay.initial="0" tooltip.delay.visible="32000" tooltip.enabled="0" tooltip.hasclosebutton="0" tooltip.icon="0" tooltip.isbubble="0" tooltip.maxwidth="0" tooltip.textcolor="134217751" tooltip.transparency="0" transparency="0" )
column(band=detail id=9 alignment="0" tabsequence=32766 border="0" color="0" x="4768" y="7" height="64" width="932" format="[general]" html.valueishtml="0"  name=ostype  tag="Determines what operating systems the example will run on" visible="1" edit.limit=40 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="ＭＳ ゴシック" font.height="-9" font.weight="400"  font.family="0" font.pitch="2" font.charset="128" background.mode="1" background.color="536870912" background.transparency="0" background.gradient.color="8421504" background.gradient.transparency="0" background.gradient.angle="0" background.brushmode="0" background.gradient.repetition.mode="0" background.gradient.repetition.count="0" background.gradient.repetition.length="100" background.gradient.focus="0" background.gradient.scale="100" background.gradient.spread="100" tooltip.backcolor="134217752" tooltip.delay.initial="0" tooltip.delay.visible="32000" tooltip.enabled="0" tooltip.hasclosebutton="0" tooltip.icon="0" tooltip.isbubble="0" tooltip.maxwidth="0" tooltip.textcolor="134217751" tooltip.transparency="0" transparency="0" )
column(band=detail id=10 alignment="0" tabsequence=32766 border="0" color="0" x="5708" y="7" height="64" width="408" format="[general]" html.valueishtml="0"  name=pbtype  tag="Determines whether the example will run on desktop or enterprise" visible="1" edit.limit=17 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="ＭＳ ゴシック" font.height="-9" font.weight="400"  font.family="0" font.pitch="2" font.charset="128" background.mode="1" background.color="536870912" background.transparency="0" background.gradient.color="8421504" background.gradient.transparency="0" background.gradient.angle="0" background.brushmode="0" background.gradient.repetition.mode="0" background.gradient.repetition.count="0" background.gradient.repetition.length="100" background.gradient.focus="0" background.gradient.scale="100" background.gradient.spread="100" tooltip.backcolor="134217752" tooltip.delay.initial="0" tooltip.delay.visible="32000" tooltip.enabled="0" tooltip.hasclosebutton="0" tooltip.icon="0" tooltip.isbubble="0" tooltip.maxwidth="0" tooltip.textcolor="134217751" tooltip.transparency="0" transparency="0" )
column(band=detail id=11 alignment="1" tabsequence=32766 border="0" color="0" x="6124" y="7" height="64" width="404" format="[General]" html.valueishtml="0"  name=exhelp  tag="Determine if the example has help associated with it in the Help File." visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="ＭＳ ゴシック" font.height="-9" font.weight="400"  font.family="0" font.pitch="2" font.charset="128" background.mode="1" background.color="536870912" background.transparency="0" background.gradient.color="8421504" background.gradient.transparency="0" background.gradient.angle="0" background.brushmode="0" background.gradient.repetition.mode="0" background.gradient.repetition.count="0" background.gradient.repetition.length="100" background.gradient.focus="0" background.gradient.scale="100" background.gradient.spread="100" tooltip.backcolor="134217752" tooltip.delay.initial="0" tooltip.delay.visible="32000" tooltip.enabled="0" tooltip.hasclosebutton="0" tooltip.icon="0" tooltip.isbubble="0" tooltip.maxwidth="0" tooltip.textcolor="134217751" tooltip.transparency="0" transparency="0" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="1" clientscriptable="0" generatejavascript="1" encodeselflinkargs="1" netscapelayers="0" pagingmethod=0 generatedddwframes="1" )
xhtmlgen() cssgen(sessionspecific="0" )
xmlgen(inline="0" )
xsltgen()
jsgen()
export.xml(headgroups="1" includewhitespace="0" metadatatype=0 savemetadata=0 )
import.xml()
export.pdf(method=0 distill.custompostscript="0" xslfop.print="0" )
export.xhtml()
 